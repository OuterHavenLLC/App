{"Albums":[],"Articles":[],"Attachments":[],"Blogs":[],"BlogPosts":[],"Body":"class OH {\r\n static DefaultContainer = &quot;.Content&quot;;\r\n static DefaultUI = &quot;[App.DefaultUI]&quot;;\r\n static DITkey = &quot;[App.DITkey]&quot;;\r\n static Inputs = &quot;input, number, select, textarea&quot;;\r\n static Language = &quot;[App.Language]&quot;;\r\n static Loading = &quot;&lt;img src=&#039;[Media:Loading]&#039; style=&#039;margin:0em auto;width:1em&#039;\/&gt;&quot;;\r\n static UIVariant = &quot;[App.DefaultUI]&quot;;\r\n static base = &quot;[App.Base]\/?_API=Web&amp;&quot;;\r\n static php_js = {};\r\n static AddContent() {\r\n  const Daemon = () =&gt; {\r\n   let SecurityKey = this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;));\r\n   if(typeof SecurityKey !== &quot;undefined&quot;) {\r\n    $.ajax({\r\n     error: (error) =&gt; {\r\n      this.Dialog({\r\n       &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n       &quot;Scrollable&quot;: JSON.stringify(error)\r\n      });\r\n     },\r\n     headers: {\r\n      Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n      Token: SecurityKey\r\n     },\r\n     method: &quot;POST&quot;,\r\n     success: (data) =&gt; {\r\n      if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n       this.Crash(data);\r\n      } else {\r\n       const Data = this.RenderView(data);\r\n       if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot; &amp;&amp; !$(&quot;.AddContent&quot;).is(&quot;:visible&quot;)) {\r\n        Data.View.then(response =&gt; {\r\n         $(&quot;.AppContainer&quot;).append(response);\r\n         setTimeout(() =&gt; {\r\n          $(&quot;.AddContent&quot;).fadeIn(500);\r\n         }, 500);\r\n        });\r\n       }\r\n      }\r\n     },\r\n     url: this.base + this.AESdecrypt(&quot;[App.AddContent]&quot;)\r\n    });\r\n   } else {\r\n    $(&quot;.AddContent&quot;).fadeOut(500);\r\n    setTimeout(() =&gt; {\r\n     $(&quot;.AddContent&quot;).remove();\r\n    }, 500);\r\n   }\r\n  };\r\n  Daemon();\r\n  setInterval(() =&gt; {\r\n   Daemon();\r\n  }, 30000);\r\n }\r\n static AESdecrypt(data = &quot;&quot;) {\r\n  if(!data || typeof data === &quot;undefined&quot;) {\r\n   return data;\r\n  } else {\r\n   try {\r\n    var Key = CryptoJS.enc.Base64.parse(this.DITkey),\r\n     decrypted = &quot;&quot;,\r\n     hashedKey = CryptoJS.SHA256(Key),\r\n     KeyWordList = hashedKey;\r\n    decrypted = CryptoJS.AES.decrypt(data, KeyWordList, {\r\n     mode: CryptoJS.mode.ECB,\r\n     padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n   } catch (error) {\r\n    console.error(&quot;AES Decryption error:&quot;, error.message);\r\n   }\r\n  }\r\n }\r\n static AESencrypt(data = &quot;&quot;) {\r\n  if(!data || typeof data === &quot;undefined&quot;) {\r\n   return data;\r\n  } else {\r\n   try {\r\n    var Key = CryptoJS.enc.Base64.parse(this.DITkey),\r\n     DataWordList = CryptoJS.enc.Utf8.parse(data),\r\n     encrypted = &quot;&quot;,\r\n     hashedKey = CryptoJS.SHA256(Key),\r\n     KeyWordList = hashedKey;\r\n    encrypted = CryptoJS.AES.encrypt(DataWordList, KeyWordList, {\r\n     mode: CryptoJS.mode.ECB,\r\n     padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    return encrypted.toString();\r\n   } catch (error) {\r\n    console.error(&quot;AES Encryption error:&quot;, error.message);\r\n   }\r\n  }\r\n }\r\n static Base64decrypt(data) {\r\n  if(!data) {\r\n   return &quot;&quot;;\r\n  } else {\r\n   try {\r\n    data = CryptoJS.enc.Base64.parse(data).toString(CryptoJS.enc.Utf8);\r\n    try {\r\n     return JSON.parse(data);\r\n    } catch {\r\n     return data;\r\n    }\r\n   } catch (error) {\r\n    console.error(&quot;Base 64 Decryption error:&quot;, error.message);\r\n   }\r\n  }\r\n }\r\n static Base64encrypt(data) {\r\n  try {\r\n   var data = typeof data === &quot;string&quot; ? data : JSON.stringify(data);\r\n   data = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(data));\r\n   return data;\r\n  } catch (error) {\r\n   console.error(&quot;Base 64 Encryption error:&quot;, error.message);\r\n  }\r\n }\r\n static Bulletins() {\r\n  var Daemon = () =&gt; {\r\n   var Bulletins = &quot;.Bulletins&quot;;\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      var Data = this.RenderView(data);\r\n      if(Data.View &gt; 0) {\r\n       Bulletin = this.AESdecrypt(&quot;[App.Bulletin]&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.Date]&quot;, &quot;Just now&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.From]&quot;, &quot;[App.Name]&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.ID]&quot;, &quot;NewBulletins&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.Message]&quot;, &quot;You have &quot; + Response + &quot; new Bulletins!&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.Options]&quot;, &quot;&lt;button class=&#039;CloseBulletins v2 v2w&#039;&gt;Okay&lt;\/button&gt;&quot;);\r\n       Bulletin = Bulletin.replaceAll(&quot;[Bulletin.Picture]&quot;, &quot;&lt;img class=&#039;c2&#039; src=&#039;[Media:LOGO]&#039; style=&#039;width:100%&#039;\/&gt;&quot;);\r\n       $(Bulletins).html(Bulletin);\r\n       setTimeout(() =&gt; {\r\n        $(Bulletins).show(&quot;slide&quot;, {\r\n         direction: &quot;right&quot;\r\n        }, 500);\r\n        setTimeout(() =&gt; {\r\n         $(Bulletins).hide(&quot;slide&quot;, {\r\n          direction: &quot;right&quot;\r\n         }, 500);\r\n         setTimeout(() =&gt; {\r\n          $(Bulletins).empty();\r\n         }, 5000);\r\n        }, 10000);\r\n       }, 500);\r\n      }\r\n     }\r\n    },\r\n    url: this.base + this.AESdecrypt(&quot;[App.Bulletins]&quot;)\r\n   });\r\n  };\r\n  Daemon();\r\n  setInterval(() =&gt; {\r\n   Daemon();\r\n  }, 120000);\r\n }\r\n static Card(data) {\r\n  let Data = data || {},\r\n       Action = Data.Action || &quot;&quot;,\r\n       Front = Data.Front || &quot;&quot;,\r\n       Card = &quot;&quot;,\r\n       ID = Data.ID || this.UUID();\r\n  $.each($(&quot;.CloseCard, .OpenCard&quot;), () =&gt; {\r\n   this.disabled = true;\r\n  });\r\n  $(&quot;body&quot;).append(&quot;&lt;div class=&#039;CardOverlay &quot; + ID + &quot; Overlay h&#039;&gt;&lt;\/div&gt;&quot;);\r\n  const FrontFace = (typeof Front === &quot;object&quot;) ? this.ChangeData(Front) : Promise.resolve(Front);\r\n  return FrontFace.then(response =&gt; {\r\n   Card = &quot;&lt;div class=&#039;CardFront Frosted Rounded ShadowedLarge h scr&#039;&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;div class=&#039;CardHeader&#039;&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;div class=&#039;Desktop50&#039;&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;button class=&#039;CardButton CloseCard&#039; data-id=&#039;&quot; + ID + &quot;&#039;&gt;Close&lt;\/button&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;div class=&#039;Desktop50 RightText&#039;&gt;\\r\\n&quot;;\r\n   Card += Action + &quot;\\r\\n&quot;;\r\n   Card += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;div class=&#039;CardCC FixedHeight scr&#039;&gt;\\r\\n&quot;;\r\n   Card += response + &quot;\\r\\n&quot;;\r\n   Card += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n   Card += &quot;&lt;\/div&gt;&quot;;\r\n   $(&quot;.&quot; + ID).html(Card);\r\n   $(&quot;.&quot; + ID).fadeIn(500);\r\n   $(&quot;.&quot; + ID).find(&quot;.CardFront&quot;).show(&quot;slide&quot;, {\r\n    direction: &quot;down&quot;\r\n   }, 500);\r\n   setTimeout(() =&gt; {\r\n    $.each($(&quot;.CloseCard, .OpenCard&quot;), () =&gt; {\r\n     this.disabled = false;\r\n    });\r\n    $(&quot;.&quot; + ID).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n   }, 600);\r\n  });\r\n }\r\n static ChangeData(data) {\r\n  let Data = data || {},\r\n       Change = Data.ChangeData || {},\r\n       View = &quot;&quot;;\r\n  if(typeof Data.Extension !== &quot;undefined&quot;) {\r\n   View = this.AESdecrypt(Data.Extension);\r\n   const promises = Object.entries(Change).map(([key, value]) =&gt; {\r\n    if($.isArray(value) || typeof value === &quot;object&quot;) {\r\n     return this.ChangeData(value).then(replacement =&gt; {\r\n      View = View.replaceAll(key, replacement);\r\n     });\r\n    } else {\r\n     View = View.replaceAll(key, this.PlainText({\r\n      &quot;BBCodes&quot;: 1,\r\n      &quot;Data&quot;: value\r\n     }));\r\n     return Promise.resolve();\r\n    }\r\n   });\r\n   return Promise.all(promises).then(() =&gt; View);\r\n  } else if(typeof Data.ExtensionID !== &quot;undefined&quot;) {\r\n   return this.LoadFromDatabase(&quot;Extensions&quot;, Data.ExtensionID).then(Extension =&gt; {\r\n    if(!Extension || !Extension.Data) {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;Extension or Extension Data is undefined for &lt;em&gt;&quot; + Data.ExtensionID + &quot;&lt;\/em&gt;.&quot;\r\n     });\r\n     return &quot;&quot;;\r\n    } else {\r\n     View = this.AESdecrypt(Extension.Data);\r\n     const promises = Object.entries(Change).map(([key, value]) =&gt; {\r\n      if($.isArray(value) || typeof value === &quot;object&quot;) {\r\n       return this.ChangeData(value).then(replacement =&gt; {\r\n        View = View.replaceAll(key, replacement);\r\n       });\r\n      } else {\r\n       View = View.replaceAll(key, this.PlainText({\r\n        &quot;BBCodes&quot;: 1,\r\n        &quot;Data&quot;: value\r\n       }));\r\n       return Promise.resolve();\r\n      }\r\n     });\r\n     return Promise.all(promises).then(() =&gt; View);\r\n    }\r\n   }).catch(error =&gt; {\r\n    this.Dialog({\r\n     &quot;Body&quot;: &quot;ChangeData: Error retrieving extension.&quot;,\r\n     &quot;Scrollable&quot;: error.message\r\n    });\r\n    return &quot;&quot;;\r\n   });\r\n  } else {\r\n   return Promise.resolve(&quot;&quot;);\r\n  }\r\n }\r\n static CloseCard(ID = &quot;&quot;) {\r\n  var Overlay = &quot;.&quot; + ID;\r\n  if(ID === &quot;&quot; || typeof ID === &quot;undefined&quot;) {\r\n   Overlay = &quot;.CardOverlay:last&quot;;\r\n  }\r\n  $(&quot;.CloseCard, .OpenCard&quot;).each(() =&gt; {\r\n   this.disabled = true;\r\n  });\r\n  $(Overlay).find(&quot;.CardFront&quot;).hide(&quot;slide&quot;, {\r\n   direction: &quot;down&quot;\r\n  }, 500);\r\n  $(Overlay).fadeOut(500);\r\n  setTimeout(() =&gt; {\r\n   $(&quot;.CloseCard, .OpenCard&quot;).each(() =&gt; {\r\n    this.disabled = false;\r\n   });\r\n   $(Overlay).fadeOut(500);\r\n   setTimeout(() =&gt; {\r\n    $(Overlay).remove();\r\n   }, 600);\r\n  }, 600);\r\n }\r\n static CloseDialog(ID = &quot;&quot;) {\r\n  var Overlay = &quot;.&quot; + ID;\r\n  if(ID === &quot;&quot; || typeof ID === &quot;undefined&quot;) {\r\n   Overlay = &quot;.DialogOverlay:last&quot;;\r\n  }\r\n  $(&quot;.CloseDialog, .OpenDialog&quot;).each(() =&gt; {\r\n   this.disabled = true;\r\n  });\r\n  $(Overlay).fadeOut(500);\r\n  $(Overlay + &quot; .Dialog&quot;).hide(&quot;scale&quot;);\r\n  setTimeout(() =&gt; {\r\n   $(&quot;.CloseDialog, .OpenDialog&quot;).each(() =&gt; {\r\n    this.disabled = false;\r\n   });\r\n   setTimeout(() =&gt; {\r\n    $(Overlay).remove();\r\n   }, 600);\r\n  }, 600);\r\n }\r\n static CloseFirSTEPTool() {\r\n  $(&quot;.CloseFirSTEPTool, .OpenFirSTEPTool&quot;).each(() =&gt; {\r\n   this.disabled = true;\r\n  });\r\n  $(&quot;.FST&quot;).hide(&quot;slide&quot;, {\r\n   direction: &quot;right&quot;\r\n  }, 500);\r\n  if($(window).width() &gt; 1000) {\r\n   $(&quot;.Content&quot;).animate({\r\n    &quot;width&quot;: &quot;100%&quot;\r\n   });\r\n  } else {\r\n   $(&quot;.Content&quot;).show(&quot;slide&quot;, {\r\n    direction: &quot;left&quot;\r\n   }, 500);\r\n   $(&quot;.CloseFirSTEPTool, .OpenFirSTEPTool&quot;).each(() =&gt; {\r\n    this.disabled = false;\r\n   });\r\n  }\r\n  setTimeout(() =&gt; {\r\n   $(&quot;.FST&quot;).empty();\r\n  }, 500);\r\n }\r\n static CloseNetMap() {\r\n  if($(&quot;.NetMap&quot;).is(&quot;:visible&quot;)) {\r\n   $(&quot;.CloseNetMap, .OpenNetMap&quot;).each(() =&gt; {\r\n    this.disabled = true;\r\n   });\r\n   $(&quot;.NetMap .ToggleAnimation&quot;).slideDown(500);\r\n   setTimeout(() =&gt; {\r\n    $(&quot;.CloseNetMap, .OpenNetMap&quot;).each(() =&gt; {\r\n     this.disabled = false;\r\n    });\r\n    $(&quot;.NetMap&quot;).fadeOut(500);\r\n    setTimeout(() =&gt; {\r\n     $(&quot;.NetMap&quot;).empty();\r\n    }, 500);\r\n   }, 500);\r\n  }\r\n }\r\n static Crash(data = &quot;&quot;) {\r\n  this.Dialog({\r\n   &quot;Body&quot;: &quot;An internal error has occurred and the request could not be completed. Please refer to the console for more information on this error.&quot;,\r\n   &quot;Header&quot;: &quot;Crash Report&quot;,\r\n   &quot;Scrollable&quot;: data\r\n  });\r\n }\r\n static DeleteContainer(button) {\r\n  var Button = button,\r\n        Container = $(Button).closest($(Button).attr(&quot;data-target&quot;));\r\n  $(Container).slideUp(500);\r\n  setTimeout(() =&gt; {\r\n   $(Container).remove();\r\n  }, 500);\r\n }\r\n static Dialog(data) {\r\n  let Data = data || {},\r\n       Actions = &quot;&quot;,\r\n       ActionsList = Data.Actions || &quot;&quot;,\r\n       Body = Data.Body || &quot;&quot;,\r\n       Dialog = &quot;&quot;,\r\n       Header = Data.Header || &quot;Error&quot;,\r\n       ID = Data.ID || this.UUID(),\r\n       NoClose = Data.NoClose || 0,\r\n       Scrollable = Data.Scrollable || &quot;&quot;;\r\n  $(&quot;.CloseDialog, .OpenDialog&quot;).each(() =&gt; {\r\n   this.disabled = true;\r\n  });\r\n  $(&quot;body&quot;).append(&quot;&lt;div class=&#039;DialogOverlay &quot; + ID + &quot; Overlay h&#039;&gt;&lt;\/div&gt;&quot;);\r\n  const FrontFace = (typeof Body === &quot;object&quot;) ? this.ChangeData(Body) : Promise.resolve(Body);\r\n  return FrontFace.then(response =&gt; {\r\n   if(ActionsList !== &quot;&quot; &amp;&amp; typeof ActionsList !== &quot;undefined&quot;) {\r\n    $(ActionsList).each((key, value) =&gt; {\r\n     Actions += value;\r\n    });\r\n   }\r\n   if(NoClose === 0) {\r\n    let Confirm = (Actions === &quot;&quot;) ? &quot;Okay&quot; : &quot;Cancel&quot;;\r\n    Actions += &quot;&lt;button class=&#039;BB CloseDialog v2 v2w&#039; data-id=&#039;&quot; + ID + &quot;&#039;&gt;&quot; + Confirm + &quot;&lt;\/button&gt;\\r\\n&quot;;\r\n   }\r\n   Dialog = &quot;&lt;div class=&#039;Frosted Dialog Rounded Shadowed h scr&#039;&gt;\\r\\n&quot;;\r\n   if(Header !== &quot;&quot; &amp;&amp; typeof Header !== &quot;undefined&quot;) {\r\n    Dialog += &quot;&lt;h3 class=&#039;CenterText&#039;&gt;&quot; + Header + &quot;&lt;\/h3&gt;\\r\\n&quot;;\r\n   }\r\n   if(response !== &quot;&quot; &amp;&amp; typeof response !== &quot;undefined&quot;) {\r\n    Dialog += &quot;&lt;p class=&#039;CenterText&#039;&gt;&quot; + response + &quot;&lt;\/p&gt;\\r\\n&quot;;\r\n   }\r\n   if(Scrollable !== &quot;&quot; &amp;&amp; typeof Scrollable !== &quot;undefined&quot;) {\r\n    Dialog += &quot;&lt;div class=&#039;NONAME scr&#039; style=&#039;max-height:400px&#039;&gt;\\r\\n&quot;;\r\n    Dialog += Scrollable + &quot;\\r\\n&quot;;\r\n    Dialog += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n   }\r\n   Dialog += Actions + &quot;\\r\\n&quot;;\r\n   Dialog += &quot;&lt;\/div&gt;&quot;;\r\n   $(&quot;.&quot; + ID).html(Dialog);\r\n   $(&quot;.&quot; + ID).fadeIn(500);\r\n   $(&quot;.&quot; + ID + &quot; .Dialog&quot;).show(&quot;scale&quot;);\r\n   setTimeout(() =&gt; {\r\n    $(&quot;.CloseDialog, .OpenDialog&quot;).each(() =&gt; {\r\n     this.disabled = false;\r\n    });\r\n    $(&quot;.&quot; + ID).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n   }, 500);\r\n  });\r\n }\r\n static GetCreditExchange(data) {\r\n  setInterval(() =&gt; {\r\n   let CreditExchange = $(document).find(&quot;.CE&quot; + data),\r\n        Credits,\r\n        Numeric;\r\n   if($(CreditExchange).find(&quot;.RangeInput&quot; + data).is(&quot;:visible&quot;)) {\r\n    Credits = $(CreditExchange).find(&quot;.RangeInput&quot; + data).val();\r\n    Numeric = (Credits * 0.00001).toFixed(2);\r\n    $(CreditExchange).find(&quot;.CreditExchange&quot;).text(&quot;Apply $&quot; + Numeric);\r\n    $(CreditExchange).find(&quot;.GetRangeValue&quot;).text(Credits);\r\n   }\r\n  }, 250);\r\n }\r\n static GetEmailValidation(data) {\r\n  var email = \/^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$\/;\r\n  return email.test(data);\r\n }\r\n static GetRangeValue(data) {\r\n  var Range = $(document).find(data);\r\n  setInterval(() =&gt; {\r\n   if($(Range).is(&quot;:visible&quot;)) {\r\n    $(Range).next().closest(&quot;.GetRangeValue&quot;).text($(Range).val());\r\n   }\r\n  }, 250);\r\n }\r\n static GetSortedList(data) {\r\n  var Response = [];\r\n  $.each(data, (key, value) =&gt; {\r\n   if($.type(value) === &quot;object&quot;) {\r\n    value = this.GetSortedList(value);\r\n   }\r\n   Response.push([key, value]);\r\n  });\r\n  return JSON.parse(JSON.stringify(Response.sort(function(a, b) {\r\n   if(a[0] === b[0]) {\r\n    Response = 0;\r\n   } else {\r\n    Response = (a[0] &lt; b[0]) ? -1 : 1;\r\n   }\r\n   return Response;\r\n  }).reduce(function(key, value) {\r\n   key[value] = value;\r\n   return key;\r\n  }, {})));\r\n }\r\n static GoToParent(Data) {\r\n  try {\r\n   var Parent = $(&quot;.ParentPage&quot; + Data).parent();\r\n   $(Parent).find(&quot;.ViewPage&quot; + Data).fadeOut(500);\r\n   setTimeout(() =&gt; {\r\n    $(Parent).find(&quot;.ParentPage&quot; + Data).show(&quot;slide&quot;, {\r\n     direction: &quot;left&quot;\r\n    }, 500);\r\n    setTimeout(() =&gt; {\r\n     $(Parent).find(&quot;.ViewPage&quot; + Data).remove();\r\n    }, 500);\r\n   }, 500);\r\n  } catch (error) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;An error occurred while switching to the parent view.&quot;,\r\n    &quot;Scrollable&quot;: error.message\r\n   });\r\n  }\r\n }\r\n static GoToView(Container, Container2, Data = &quot;&quot;) {\r\n  var Parent = $(&quot;.&quot; + Container).parent();\r\n  $(Parent).append(&quot;&lt;div class=&#039;&quot; + Container2 + &quot; h scr&#039;&gt;&lt;\/div&gt;&quot;);\r\n  $(Parent).find(&quot;.&quot; + Container).hide(&quot;slide&quot;, {\r\n   direction: &quot;left&quot;\r\n  }, 500);\r\n  setTimeout(() =&gt; {\r\n   if(Data !== &quot;&quot; &amp;&amp; typeof Data !== &quot;undefined&quot;) {\r\n    $(Parent).find(&quot;.&quot; + Container2).html(Data);\r\n   }\r\n   $(Parent).find(&quot;.&quot; + Container2).fadeIn(500);\r\n  }, 600);\r\n }\r\n static Encrypt(data) {\r\n  if($.isArray(data) &amp;&amp; typeof data !== &quot;undefined&quot;) {\r\n   $.each(data, (key, input) =&gt; {\r\n    input.value = this.AESencrypt(input.value);\r\n   });\r\n   return data;\r\n  } else {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;The encoder expects a populated list.&quot;\r\n   });\r\n  }\r\n }\r\n static ExecuteCommands(Commands = &quot;&quot;) {\r\n  if(typeof Commands === &quot;object&quot;) {\r\n   $.each(Commands, (Key, Command) =&gt; {\r\n    const AES = Command.AES || &quot;No&quot;,\r\n              Name = Command.Name || &quot;&quot;,\r\n              Parameters = Command.Parameters || {};\r\n    let ParameterCount = 0;\r\n    ParameterCount = Object.keys(Parameters).length;\r\n    if(Name === &quot;Bulletins&quot;) {\r\n     this.Bulletins();\r\n    } else if(Name === &quot;GetCreditExchange&quot; &amp;&amp; ParameterCount === 1) {\r\n     this.GetCreditExchange(Parameters[0]);\r\n    } else if(Name === &quot;LightSearch&quot; &amp;&amp; ParameterCount === 1) {\r\n     this.ReSearch(eval(Parameters[0]));\r\n    } else if(Name === &quot;RefreshCoverPhoto&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.RefreshCoverPhoto(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;RenderChart&quot; &amp;&amp; ParameterCount === 1) {\r\n     this.RenderChart(Parameters[0]);\r\n    } else if(Name === &quot;RenderInputs&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.RenderInputs(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;RenderVisibilityFilter&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.RenderVisibilityFilter(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;RenderVisibilityFilters&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.RenderVisibilityFilters(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;SignIn&quot; &amp;&amp; ParameterCount === 1) {\r\n     this.SignIn(Command.Parameters[0]);\r\n    } else if(Name === &quot;UpdateContent&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.UpdateContent(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;UpdateContentAES&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.UpdateContent(Parameters[0], Parameters[1], &quot;AES&quot;);\r\n    } else if(Name === &quot;UpdateCoverPhoto&quot; &amp;&amp; ParameterCount === 2) {\r\n     this.UpdateCoverPhoto(Parameters[0], Parameters[1]);\r\n    } else if(Name === &quot;UpdateContentRecursive&quot; &amp;&amp; ParameterCount === 3) {\r\n     this.UpdateContentRecursive(Parameters[0], Parameters[1], Parameters[2]);\r\n    } else if(Name === &quot;UpdateContentRecursiveAES&quot; &amp;&amp; ParameterCount === 3) {\r\n     this.UpdateContentRecursive(Parameters[0], Parameters[1], Parameters[2], &quot;AES&quot;);\r\n    }\r\n   });\r\n  }\r\n }\r\n static FST(data) {\r\n  const Data = data || &quot;&quot;;\r\n  $(&quot;.FST&quot;).html(&quot;&lt;div class=&#039;TopBarMargin&#039;&gt;&lt;\/div&gt;\\r\\n&quot;);\r\n  $(&quot;.FST&quot;).append(Data);\r\n  $(&quot;.FST&quot;).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n  setTimeout(() =&gt; {\r\n   if($(window).width() &gt; 1000) {\r\n    $(&quot;.Content&quot;).animate({\r\n     &quot;width&quot;: &quot;66.66%&quot;\r\n    });\r\n   } else {\r\n    $(&quot;.Content&quot;).hide(&quot;slide&quot;, {\r\n     direction: &quot;left&quot;\r\n    }, 500);\r\n   }\r\n   $(&quot;.FST&quot;).show(&quot;slide&quot;, {\r\n    direction: &quot;right&quot;\r\n   }, 500);\r\n  }, 500);\r\n }\r\n static InstantSignOut() {\r\n  setTimeout(() =&gt; {\r\n   this.LocalData(&quot;Purge&quot;, &quot;SecurityKey&quot;);\r\n   this.SetUIVariant(this.DefaultUI);\r\n  }, 1000);\r\n }\r\n static LiveView(input) {\r\n  const Daemon = () =&gt; {\r\n   let Input = $(document).find(input),\r\n        DLC = $(Input).val(),\r\n        Encryption = $(Input).attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n        Preview = $(Input).attr(&quot;data-preview-destination&quot;),\r\n        View = $(Input).attr(&quot;data-live-view&quot;) || &quot;&quot;;\r\n   if(Encryption === &quot;AES&quot;) {\r\n    View = this.AESdecrypt(View);\r\n   } else {\r\n    View = this.Base64decrypt(View);\r\n   } if($(Input).length &amp;&amp; $(Preview).length) {\r\n    if($(Preview).is(&quot;:visible&quot;)) {\r\n     $.ajax({\r\n      error: (error) =&gt; {\r\n       this.Dialog({\r\n        &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n        &quot;Scrollable&quot;: JSON.stringify(error)\r\n       });\r\n      },\r\n      headers: {\r\n       Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n       Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n      },\r\n      method: &quot;POST&quot;,\r\n      success: (data) =&gt; {\r\n       if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n        this.Crash(data);\r\n       } else {\r\n        const Data = this.RenderView(data);\r\n        if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n         Data.View.then(response =&gt; {\r\n          $(Preview).html(response);\r\n          this.ExecuteCommands(Data.Commands);\r\n         }).catch(error =&gt; {\r\n          this.Dialog({\r\n           &quot;Body&quot;: &quot;LiveView: Error rendering view data. Please see below for more information:&quot;,\r\n           &quot;Scrollable&quot;: error.message\r\n          });\r\n         });\r\n        }\r\n       }\r\n      },\r\n      url: this.base + View + DLC\r\n     });\r\n    }\r\n   }\r\n  };\r\n  Daemon();\r\n  setInterval(() =&gt; {\r\n   Daemon();\r\n  }, 15000);\r\n }\r\n static LocalData(action = &quot;Get&quot;, identifier = &quot;&quot;, data = {}) {\r\n  if(action === &quot;Get&quot;) {\r\n   if(window.localStorage.getItem(identifier)) {\r\n    if(identifier !== &quot;&quot; &amp;&amp; typeof identifier !== &quot;undefined&quot;) {\r\n     data = window.localStorage.getItem(identifier) || &quot;&quot;;\r\n     data = JSON.parse(data);\r\n    }\r\n   } else {\r\n    data = &quot;&quot;;\r\n   }\r\n   return data;\r\n  } else if(action === &quot;Purge&quot;) {\r\n   if(identifier === &quot;&quot; || typeof identifier === &quot;undefined&quot;) {\r\n    window.localStorage.clear();\r\n   } else {\r\n    window.localStorage.removeItem(identifier);\r\n   }\r\n  } else if(action === &quot;Save&quot;) {\r\n   if(data !== {} &amp;&amp; identifier !== &quot;&quot; &amp;&amp; typeof identifier !== &quot;undefined&quot;) {\r\n    data = JSON.stringify(data);\r\n    window.localStorage.setItem(identifier, data);\r\n   }\r\n  }\r\n }\r\n static LoadFromDatabase(Store, ID) {\r\n  if(typeof Store !== &quot;string&quot; || Store.trim() === &quot;&quot;) {\r\n   return Promise.reject(new Error(&quot;The Store Identifier is missing.&quot;));\r\n  }\r\n  if(ID === undefined || ID === null) {\r\n   return Promise.reject(new Error(&quot;The Data Identifier is missing.&quot;));\r\n  }\r\n  return new Promise((resolve, reject) =&gt; {\r\n   const openRequest = indexedDB.open(&quot;OuterHaven&quot;);\r\n   openRequest.onupgradeneeded = () =&gt; {\r\n    const db = openRequest.result;\r\n    if(!db.objectStoreNames.contains(Store)) {\r\n     db.createObjectStore(Store, {\r\n      keyPath: &quot;ID&quot;\r\n     });\r\n    }\r\n   };\r\n   openRequest.onerror = () =&gt; reject(new Error(&quot;Failed to open database: &quot; + openRequest.error));\r\n   openRequest.onsuccess = () =&gt; {\r\n    const db = openRequest.result;\r\n    let transaction;\r\n    try {\r\n     transaction = db.transaction(Store, &quot;readonly&quot;);\r\n    } catch (error) {\r\n     db.close();\r\n     reject(new Error(&quot;Transaction failed for store &quot; + Store + &quot;: &quot; + error.message + &quot;.&quot;));\r\n     return;\r\n    }\r\n    const store = transaction.objectStore(Store);\r\n    const getRequest = store.get(ID);\r\n    getRequest.onsuccess = () =&gt; {\r\n     const result = getRequest.result;\r\n     db.close();\r\n     resolve(result ? result : undefined);\r\n    };\r\n    getRequest.onerror = () =&gt; {\r\n     db.close();\r\n     reject(new Error(&quot;Failed to retrieve ID &quot; + ID + &quot; from store &quot; + Store + &quot;: &quot; + getRequest.error + &quot;.&quot;));\r\n    };\r\n   };\r\n  });\r\n }\r\n static MoreResults(container) {\r\n  if(typeof $(container).data(&quot;end&quot;) === &quot;undefined&quot;) {\r\n   return;\r\n  } else if($(container).data(&quot;end&quot;) === &quot;Yes&quot;) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;MoreResults: You have reached the end.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n   $(container).data(&quot;loading&quot;, false);\r\n  } else {\r\n   $(container).data(&quot;loading&quot;, true);\r\n   const processor = $(container).data(&quot;processor&quot;),\r\n             query = $(container).data(&quot;query&quot;),\r\n             extension = $(container).data(&quot;extension&quot;),\r\n             nextOffset = $(container).data(&quot;next-offset&quot;),\r\n             url = processor + &quot;&amp;Offset=&quot; + nextOffset;\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;MoreResults: Data retrieval error. Please see below:&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n     $(container).data(&quot;loading&quot;, false);\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = JSON.parse(this.AESdecrypt(data)),\r\n                currentItems = $(container).find(&quot;.SearchListItem&quot;).length;\r\n      let Response = Data.Response,\r\n           List = this.GetSortedList(Response.List || {}),\r\n           ListItemCommands = this.GetSortedList(Response.Commands || {}),\r\n           batchIndex = 0;\r\n      for(let i in List) {\r\n       let Key = List[i][0] || &quot;&quot;,\r\n            KeyCheck = (typeof List[i][0] !== &quot;undefined&quot;) ? 1 : 0,\r\n            Value = List[i][1] || {},\r\n            ValueCheck = (typeof List[i][1] !== &quot;undefined&quot;) ? 1 : 0;\r\n       if(KeyCheck === 1 &amp;&amp; ValueCheck === 1) {\r\n        let Result = extension || &quot;&quot;;\r\n        for(let j in Value) {\r\n         if(typeof Result === &quot;string&quot;) {\r\n          Result = Result.replaceAll(Value[j][0], Value[j][1]);\r\n         }\r\n        }\r\n        batchIndex += 1;\r\n        const itemNumber = currentItems + batchIndex;\r\n        $(container).append(&quot;&lt;div class=&#039;SearchListItem&quot; + itemNumber + &quot; h&#039;&gt;&quot; + Result + &quot;&lt;\/div&gt;\\r\\n&quot;);\r\n        $(container).find(&quot;.SearchListItem&quot; + itemNumber).fadeIn(Math.round((batchIndex \/ 2) * 500));\r\n       }\r\n      } for(let i in ListItemCommands) {\r\n       let CurrentListItemCommands = ListItemCommands[i][1];\r\n       if(typeof CurrentListItemCommands !== &quot;undefined&quot;) {\r\n        setTimeout(() =&gt; {\r\n         this.ExecuteCommands(CurrentListItemCommands);\r\n        }, Math.round((i \/ 2) * 500));\r\n       }\r\n      } if(Response.End === &quot;Yes&quot;) {\r\n       $(container).data(&quot;end&quot;, &quot;Yes&quot;);\r\n       $(container).parent().find(&quot;.MoreResults&quot;).remove();\r\n      } else {\r\n       $(container).data(&quot;next-offset&quot;, Response.Offset);\r\n      }\r\n      $(container).data(&quot;loading&quot;, false);\r\n     }\r\n    },\r\n    url: url\r\n   });\r\n  }\r\n }\r\n static OpenCard(View, Encryption = &quot;&quot;) {\r\n  if(Encryption === &quot;AES&quot;) {\r\n   View = this.AESdecrypt(View);\r\n  } else {\r\n   View = this.Base64decrypt(View);\r\n  }\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    this.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     this.Crash(data);\r\n    } else {\r\n     this.RenderView(data);\r\n    }\r\n   },\r\n   url: this.base + View\r\n  });\r\n }\r\n static OpenDialog(View, Encryption = &quot;&quot;) {\r\n  if(Encryption === &quot;AES&quot;) {\r\n   View = this.AESdecrypt(View);\r\n  } else {\r\n   View = this.Base64decrypt(View);\r\n  }\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    this.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     this.Crash(data);\r\n    } else {\r\n     this.RenderView(data);\r\n    }\r\n   },\r\n   url: this.base + View\r\n  });\r\n }\r\n static OpenFirSTEPTool(Ground, FirSTEPTool) {\r\n  if(Ground !== &quot;&quot; &amp;&amp; typeof Ground !== &quot;undefined&quot;) {\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;OpenFirSTEPTool: Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = this.RenderView(data);\r\n      if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n       Data.View.then(response =&gt; {\r\n        if(Data.AddTopMargin === 1) {\r\n         $(this.DefaultContainer).append(&quot;&lt;div class=&#039;TopBarMargin&#039;&gt;&lt;\/div&gt;\\r\\n&quot;);\r\n        }\r\n        $(this.DefaultContainer).html(response);\r\n        $(this.DefaultContainer).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n        this.ExecuteCommands(Data.Commands);\r\n       }).catch(error =&gt; {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;OpenFirSTEPTool: Error rendering view data. Please see below for more information:&quot;,\r\n         &quot;Scrollable&quot;: error.message\r\n        });\r\n       });\r\n      }\r\n     }\r\n    },\r\n    url: this.base + this.AESdecrypt(Ground)\r\n   });\r\n  } if(FirSTEPTool !== &quot;&quot; &amp;&amp; typeof FirSTEPTool !== &quot;undefined&quot;) {\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;OpenFirSTEPTool: Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = this.RenderView(data);\r\n      if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n       Data.View.then(response =&gt; {\r\n        this.FST(response);\r\n        this.ExecuteCommands(Data.Commands);\r\n       }).catch(error =&gt; {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;OpenFirSTEPTool: Error rendering view data. Please see below for more information:&quot;,\r\n         &quot;Scrollable&quot;: error.message\r\n        });\r\n       });\r\n      }\r\n     }\r\n    },\r\n    url: this.base + this.AESdecrypt(FirSTEPTool)\r\n   });\r\n  }\r\n }\r\n static OpenNetMap(View, Encryption = &quot;&quot;) {\r\n  if(Encryption === &quot;AES&quot;) {\r\n   View = this.AESdecrypt(View);\r\n  } else {\r\n   View = this.Base64decrypt(View);\r\n  }\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    this.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     this.Crash(data);\r\n    } else {\r\n     const Data = this.RenderView(data);\r\n     if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n      Data.View.then(response =&gt; {\r\n       $(&quot;.CloseNetMap, .OpenNetMap&quot;).each(() =&gt; {\r\n        this.disabled = true;\r\n       });\r\n       $(&quot;.NetMap&quot;).html(response);\r\n       $(&quot;.NetMap&quot;).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n       setTimeout(() =&gt; {\r\n        $(&quot;.CloseNetMap, .OpenNetMap&quot;).each(() =&gt; {\r\n         this.disabled = false;\r\n        });\r\n        $(&quot;.NetMap&quot;).fadeIn(500);\r\n        $(&quot;.NetMap .ToggleAnimation&quot;).slideUp(1000);\r\n        this.ExecuteCommands(Data.Commands);\r\n       }, 500);\r\n      }).catch(error =&gt; {\r\n       this.Dialog({\r\n        &quot;Body&quot;: &quot;OpenNetMap: Error rendering view data. Please see below for more information:&quot;,\r\n        &quot;Scrollable&quot;: error.message\r\n       });\r\n      });\r\n     }\r\n    }\r\n   },\r\n   url: this.base + View\r\n  });\r\n }\r\n static RefreshCoverPhoto(container, data = {}, disabled = &quot;false&quot;) {\r\n  if(data !== {} &amp;&amp; typeof data !== &quot;undefined&quot; &amp;&amp; disabled === &quot;false&quot;) {\r\n   let CoverPhoto = container || &quot;.CoverPhoto&quot;,\r\n        Image,\r\n        Index = 0,\r\n        NewSlides = {},\r\n        SlideCount = 0;\r\n   $.each(data, (key, value) =&gt; {\r\n    NewSlides[SlideCount] = value;\r\n    SlideCount = Math.round(SlideCount + 1);\r\n   });\r\n   if(CoverPhoto !== &quot;.CoverPhoto&quot; &amp;&amp; typeof CoverPhoto !== &quot;undefined&quot;) {\r\n    Image = NewSlides[Math.floor(Math.random() * SlideCount)];\r\n    $(CoverPhoto).css({\r\n     &quot;background&quot;: &quot;url(&#039;&quot; + Image + &quot;&#039;) no-repeat center center fixed&quot;,\r\n     &quot;background-size&quot;: &quot;cover&quot;,\r\n     &quot;transition&quot;: &quot;background 1s ease-in-out&quot;\r\n    });\r\n    setTimeout(() =&gt; {\r\n     setInterval(() =&gt; {\r\n      Image = NewSlides[Math.floor(Math.random() * SlideCount)];\r\n      $(CoverPhoto).css({\r\n       &quot;background&quot;: &quot;url(&#039;&quot; + Image + &quot;&#039;) no-repeat center center fixed&quot;,\r\n       &quot;background-size&quot;: &quot;cover&quot;\r\n      });\r\n     }, 10000);\r\n    }, 600);\r\n   }\r\n  }\r\n }\r\n static RenderChart(Data) {\r\n  if(!Data || (typeof Data === &quot;object&quot; &amp;&amp; Object.keys(Data).length === 0)) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;RenderChart: Invalid data was supplied.&quot;\r\n   });\r\n  } else {\r\n   let BackgroundColor = Data.BackgroundColor || {\r\n         0: 0,\r\n         1: 0,\r\n         2: 255\r\n        },\r\n        ChartUI = document.getElementById(Data.Chart || &quot;Chart&quot;).getContext(&quot;2d&quot;),\r\n        DataSets = Data.DataSets || [],\r\n        Labels = Data.Labels || [],\r\n        Title = Data.Title || &quot;Untitled&quot;,\r\n        Type = Data.Type || &quot;line&quot;;\r\n   const createGradient = (ctx, chartType) =&gt; {\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n    gradient.addColorStop(0, &quot;rgba(&quot; + BackgroundColor.join(&quot;, &quot;) +&quot;, 0.9)&quot;);\r\n    gradient.addColorStop(1, &quot;rgba(0, 0, 0, 0)&quot;);\r\n    return gradient;\r\n   };\r\n   DataSets = DataSets.map(dataset =&gt; {\r\n    return {\r\n     ...dataset,\r\n     backgroundColor: createGradient(ChartUI, Type),\r\n     fill: true\r\n    };\r\n   });\r\n   new Chart(ChartUI, {\r\n    type: Type,\r\n    data: {\r\n     labels: Labels,\r\n     datasets: DataSets\r\n    },\r\n    options: {\r\n     responsive: true,\r\n     plugins: {\r\n      legend: {\r\n       position: &quot;bottom&quot;\r\n      },\r\n      title: {\r\n       display: true,\r\n       text: Title\r\n      }\r\n     },\r\n     scales: {\r\n      y: {\r\n       beginAtZero: true\r\n      }\r\n     }\r\n    }\r\n   });\r\n  }\r\n }\r\n static RenderDesignView(container) {\r\n  var Container = container || {},\r\n   DesignView = $($(Container).attr(&quot;data-in&quot;)).val();\r\n  if($(Container).is(&quot;:visible&quot;)) {\r\n   DesignView = this.Base64encrypt(encodeURIComponent(DesignView));\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = this.RenderView(data);\r\n      if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n       Data.View.then(response =&gt; {\r\n        $(Container).html(response);\r\n        $.each($(Container).find(&quot;button, input, select, textarea&quot;), () =&gt; {\r\n         this.disabled = true;\r\n        });\r\n        $(Container).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n        this.ExecuteCommands(Data.Commands);\r\n       }).catch(error =&gt; {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;RenderDesignView: Error rendering view data. Please see below for more information:&quot;,\r\n         &quot;Scrollable&quot;: error.message\r\n        });\r\n       });\r\n      }\r\n     }\r\n    },\r\n    url: this.base + this.Base64decrypt($(Container).attr(&quot;data-u&quot;)) + DesignView\r\n   });\r\n  }\r\n }\r\n static RenderInputs(Container, Data) {\r\n  var Container = Container || this.DefaultContainer,\r\n        Data = Data || {};\r\n  if(Container !== &quot;&quot; &amp;&amp; Data !== {}) {\r\n   $(Container).empty();\r\n   $.each(Data, (key, input) =&gt; {\r\n    var Attributes,\r\n          Input = input || {},\r\n          OptionGroup = Input[&quot;OptionGroup&quot;] || {},\r\n          OptionGroupLabel,\r\n          Options = Input[&quot;Options&quot;] || {},\r\n          RenderInput = &quot;&quot;,\r\n          Type = Input[&quot;Type&quot;] || &quot;Text&quot;;\r\n    Attributes = Input[&quot;Attributes&quot;] || {};\r\n    if(Attributes !== {} &amp;&amp; Type !== &quot;&quot;) {\r\n     var OptionGroupLabel = &quot;&quot;,\r\n           OptionGroupList = &quot;&quot;,\r\n           RenderInput = &quot;&quot;,\r\n           RenderInputAttributes = &quot;&quot;,\r\n           Selected = &quot;&quot;;\r\n     if(Type !== &quot;Select&quot;) {\r\n      $.each(Attributes, (attribute, value) =&gt; {\r\n       RenderInputAttributes += &quot; &quot; + attribute + &quot;=&#039;&quot; + value + &quot;&#039;&quot;;\r\n      });\r\n     } if(Type === &quot;Check&quot;) {\r\n      Selected = (Options[&quot;Selected&quot;] === 1) ? &quot; checked&quot; : &quot;&quot;;\r\n      RenderInput = &quot;&lt;div class=&#039;NONAME&#039;&gt;&lt;\/div&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;div class=&#039;InnerMargin&#039;&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;div class=&#039;Desktop33&#039;&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;input&quot; + RenderInputAttributes + &quot; type=&#039;checkbox&#039; value=&#039;&quot; + Input[&quot;Value&quot;] + &quot;&#039;&quot; + Selected + &quot;\/&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;div class=&#039;Desktop66&#039;&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;p&gt;&quot; + Input[&quot;Text&quot;] + &quot;&lt;\/p&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n      RenderInput += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n     } else if(Type === &quot;Select&quot;) {\r\n      if(Object.keys(OptionGroup).length === 0) {\r\n       this.Dialog({\r\n        &quot;Body&quot;: &quot;RenderInputs: The &lt;em&gt;select&lt;\/em&gt; input option group is empty.&quot;\r\n       });\r\n      } else {\r\n       $.each(OptionGroup, (option, text) =&gt; {\r\n        Selected = (Input[&quot;Value&quot;] === option) ? &quot; selected&quot; : &quot;&quot;;\r\n        OptionGroupList += &quot;&lt;option value=&#039;&quot; + option + &quot;&#039;&quot; + Selected + &quot;&gt;&quot; + text + &quot;&lt;\/option&gt;\\r\\n&quot;;\r\n       });\r\n       OptionGroupLabel = Options[&quot;HeaderText&quot;] || Input[&quot;Title&quot;];\r\n       RenderInput = &quot;&lt;select class=&#039;LI v2 v2w&#039; name=&#039;&quot; + Input[&quot;Name&quot;] + &quot;&#039;&gt;\\r\\n&quot;;\r\n       RenderInput += &quot;&lt;optgroup label=&#039;&quot; + OptionGroupLabel + &quot;&#039;&gt;\\r\\n&quot;;\r\n       RenderInput += OptionGroupList + &quot;\\r\\n&quot;;\r\n       RenderInput += &quot;&lt;\/optgroup&gt;\\r\\n&quot;;\r\n       RenderInput += &quot;&lt;\/select&gt;\\r\\n&quot;;\r\n      }\r\n     } else if(Type === &quot;Text&quot;) {\r\n      let TextType = Attributes[&quot;type&quot;] || &quot;&quot;,\r\n           TextValue = (TextType === &quot;hidden&quot;) ? Input[&quot;Value&quot;] : this.AESdecrypt(Input[&quot;Value&quot;]),\r\n           WYSIWYG = &quot;&quot;;\r\n      RenderInput = &quot;&lt;input&quot; + RenderInputAttributes + &quot; value=&#039;&quot; + TextValue + &quot;&#039;\/&gt;\\r\\n&quot;;\r\n     } else if(Type === &quot;TextBox&quot;) {\r\n      RenderInput = &quot;&lt;textarea &quot; + RenderInputAttributes + &quot;&gt;&quot; + this.AESdecrypt(Input[&quot;Value&quot;]) + &quot;&lt;\/textarea&gt;\\r\\n&quot;;\r\n      if(Options[&quot;LargeBox&quot;] === 1) {\r\n       RenderInput = &quot;&lt;textarea &quot; + RenderInputAttributes + &quot; rows=&#039;40&#039;&gt;&quot; + this.AESdecrypt(Input[&quot;Value&quot;]) + &quot;&lt;\/textarea&gt;\\r\\n&quot;;\r\n      } else if(Options[&quot;WYSIWYG&quot;] === 1) {\r\n       RenderInput = &quot;&lt;textarea &quot; + RenderInputAttributes + &quot; rows=&#039;40&#039;&gt;&quot; + this.AESdecrypt(Input[&quot;Value&quot;]) + &quot;&lt;\/textarea&gt;\\r\\n&quot;;\r\n       $.ajax({\r\n        error: (error) =&gt; {\r\n         this.Dialog({\r\n          &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n          &quot;Scrollable&quot;: JSON.stringify(error)\r\n         });\r\n        },\r\n        headers: {\r\n         Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n         Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n        },\r\n        method: &quot;POST&quot;,\r\n        success: (data) =&gt; {\r\n         if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n          this.Crash(data);\r\n         } else {\r\n          const WData = this.RenderView(data);\r\n          WData.View.then(response =&gt; {\r\n           WYSIWYG = response;\r\n           WYSIWYG = WYSIWYG.replaceAll(&quot;[WYSIWYG.ID]&quot;, Attributes[&quot;data-editor-identifier&quot;]);\r\n           WYSIWYG = WYSIWYG.replaceAll(&quot;[WYSIWYG.TextBox]&quot;, RenderInput);\r\n           RenderInput = WYSIWYG;\r\n           this.ExecuteCommands(WData.Commands);\r\n          }).catch(error =&gt; {\r\n           this.Dialog({\r\n            &quot;Body&quot;: &quot;WYSIWYG: Error rendering view data. Please see below:&quot;,\r\n            &quot;Scrollable&quot;: error.message\r\n           });\r\n          });\r\n         }\r\n        },\r\n        url: this.base + this.AESdecrypt(&quot;[App.WYSIWYG]&quot;)\r\n       });\r\n       RenderInput += &quot;&lt;div class=&#039;NONAME&#039;&gt;&lt;\/div&gt;\\r\\n&quot;;\r\n      }\r\n     } if(Options[&quot;Header&quot;] === 1) {\r\n      RenderInput = &quot;&lt;h4 class=&#039;UpperCase&#039;&gt;&quot; + Options[&quot;HeaderText&quot;] + &quot;&lt;\/h4&gt;\\r\\n&quot; + RenderInput + &quot;\\r\\n&quot;;\r\n     } if(Options[&quot;Container&quot;] === 1) {\r\n      RenderInput = &quot;&lt;div class=&#039;&quot; + Options[&quot;ContainerClass&quot;] + &quot;&#039;&gt;&quot; + RenderInput + &quot;&lt;\/label&gt;\\r\\n&quot;;\r\n     } if(Options[&quot;Label&quot;] === 1) {\r\n      RenderInput = &quot;&lt;label&gt;&quot; + RenderInput + &quot;&lt;\/label&gt;\\r\\n&quot;;\r\n     }\r\n    }\r\n    $(Container).append(RenderInput);\r\n   }, 500);\r\n   $(Container).parent().find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n  }\r\n }\r\n static RenderView(data) {\r\n  let Data = JSON.parse(this.AESdecrypt(data)),\r\n       AccessCode = Data.AccessCode || &quot;Denied&quot;,\r\n       AddTopMargin = Data.AddTopMargin || 1,\r\n       Commands = Data.Commands || &quot;&quot;,\r\n       NewVariant = Data.SetUIVariant || &quot;&quot;,\r\n       ResponseType = Data.ResponseType || &quot;Dialog&quot;,\r\n       Success = Data.Success || &quot;&quot;,\r\n       View = Data.View || &quot;&quot;;\r\n  document.title = Data.Title || document.title;\r\n  this.SetUIVariant(NewVariant);\r\n  if(Data.Card !== &quot;&quot; &amp;&amp; typeof Data.Card !== &quot;undefined&quot;) {\r\n   this.Card(Data.Card);\r\n   setTimeout(() =&gt; {\r\n    this.ExecuteCommands(Commands);\r\n   }, 600);\r\n  }\r\n  if(Data.Dialog !== &quot;&quot; &amp;&amp; typeof Data.Dialog !== &quot;undefined&quot;) {\r\n   this.Dialog(Data.Dialog);\r\n   setTimeout(() =&gt; {\r\n    this.ExecuteCommands(Commands);\r\n   }, 600);\r\n  }\r\n  if(typeof View === &quot;object&quot;) {\r\n   View = this.ChangeData(View);\r\n  }\r\n  return {\r\n   &quot;AccessCode&quot;: AccessCode,\r\n   &quot;AddTopMargin&quot;: AddTopMargin,\r\n   &quot;Commands&quot;: Commands,\r\n   &quot;ResponseType&quot;: ResponseType,\r\n   &quot;Success&quot;: Success,\r\n   &quot;View&quot;: View\r\n  };\r\n }\r\n static PlainText(data) {\r\n  let View = data.Data || &quot;&quot;;\r\n  if(View !== &quot;&quot; &amp;&amp; typeof View === &quot;string&quot;) {\r\n   View = View.replace(&quot;&lt;!--BEGIN DO NOT PURGE--&gt;&quot;, &quot;&quot;);\r\n   View = View.replace(&quot;&lt;!--END DO NOT PURGE--&gt;&quot;, &quot;&quot;);\r\n   View = View.replace(\/&lt;!--BEGIN PURGE--&gt;[\\s\\S]*?&lt;!--END PURGE--&gt;\/g, &quot;&quot;);\r\n   if(data.BBCodes &amp;&amp; data.BBCodes === 1) {\r\n    View = View.replaceAll(\/\\[b\\](.*?)\\[\\\/b\\]\/gis, &quot;&lt;strong&gt;$1&lt;\/strong&gt;&quot;);\r\n    View = View.replaceAll(\/\\[d:.(.*?)\\](.*?)\\[\\\/d\\]\/gis, &quot;&lt;div class=\\&quot;$1\\&quot;&gt;$2&lt;\/div&gt;\\r\\n&quot;);\r\n    View = View.replaceAll(\/\\[d:#(.*?)\\](.*?)\\[\\\/d\\]\/gis, &quot;&lt;div id=\\&quot;$1\\&quot;&gt;$2&lt;\/div&gt;\\r\\n&quot;);\r\n    View = View.replaceAll(\/\\[i\\](.*?)\\[\\\/i\\]\/gis, &quot;&lt;em&gt;$1&lt;\/em&gt;&quot;);\r\n    View = View.replaceAll(\/\\[u\\](.*?)\\[\\\/u\\]\/gis, &quot;&lt;u&gt;$1&lt;\/u&gt;&quot;);\r\n    View = View.replaceAll(\/\\[(.*?)\\[(.*?)\\]:(.*?)\\]\/gis, &quot;&lt;$1 $2&gt;$3&lt;\/$1&gt;&quot;);\r\n    View = View.replaceAll(\/\\[IMG:s=(.*?)&amp;w=(.*?)\\]\/gis, &quot;&lt;img src=\\&quot;$1\\&quot; style=\\&quot;width:$2\\&quot;\/&gt;&quot;);\r\n    View = View.replaceAll(\/\\[P:(.*?)\\]\/gis, &quot;&lt;p&gt;$1&lt;\/p&gt;&quot;);\r\n   } if(data.Decode &amp;&amp; data.Decode === 1) {\r\n    View = this.AESdecode(View);\r\n   } if(data.Encode &amp;&amp; data.Encode === 1) {\r\n    View = this.AESencode(View);\r\n   }\r\n  }\r\n  return View;\r\n }\r\n static RenderVisibilityFilter(Container, Data) {\r\n  var Container = Container || this.DefaultContainer,\r\n   Data = Data || {},\r\n   Response = {};\r\n  if(Data !== {}) {\r\n   var Filter = Data.Filter || &quot;Privacy&quot;,\r\n    Name = Data.Name || &quot;Privacy&quot;,\r\n    OptionGroup = {},\r\n    Title = Data.Title || &quot;Content Visibility&quot;,\r\n    Value = Data.Value || &quot;&quot;;\r\n   if(Filter === &quot;NSFW&quot;) {\r\n    OptionGroup = {\r\n     &quot;0&quot;: &quot;Kid-Friendly&quot;,\r\n     &quot;1&quot;: &quot;Adults Only&quot;\r\n    };\r\n   } else if(Filter === &quot;Privacy&quot;) {\r\n    OptionGroup = {\r\n     &quot;55c53cfda992192581cb4f006109df47&quot;: &quot;Acquaintances&quot;,\r\n     &quot;43b5ac258be80f9a8f5bc8d3c6036e2b&quot;: &quot;Close Contacts&quot;,\r\n     &quot;9aa698f602b1e5694855cee73a683488&quot;: &quot;Contacts&quot;,\r\n     &quot;47f9082fc380ca62d531096aa1d110f1&quot;: &quot;Private&quot;,\r\n     &quot;3d067bedfe2f4677470dd6ccf64d05ed&quot;: &quot;Public&quot;\r\n    };\r\n   }\r\n   this.RenderInputs(Container, [{\r\n    &quot;Attributes&quot;: {},\r\n    &quot;OptionGroup&quot;: OptionGroup,\r\n    &quot;Options&quot;: {\r\n     &quot;Container&quot;: 1,\r\n     &quot;ContainerClass&quot;: &quot;NONAME&quot;,\r\n     &quot;Header&quot;: 1,\r\n     &quot;HeaderText&quot;: Title\r\n    },\r\n    &quot;Name&quot;: Name,\r\n    &quot;Title&quot;: Title,\r\n    &quot;Type&quot;: &quot;Select&quot;,\r\n    &quot;Value&quot;: Value\r\n   }]);\r\n  }\r\n }\r\n static RenderVisibilityFilters(Container, Data) {\r\n  var Container = Container || this.DefaultContainer,\r\n   Data = Data || {},\r\n   Inputs = [],\r\n   Response = {};\r\n  if(Data !== {}) {\r\n   $.each(Data, (key, input) =&gt; {\r\n    var Filter = input[&quot;Filter&quot;] || &quot;Privacy&quot;,\r\n     Name = input[&quot;Name&quot;] || &quot;Privacy&quot;,\r\n     OptionGroup = {},\r\n     Title = input[&quot;Title&quot;] || &quot;Content Visibility&quot;,\r\n     Value = input[&quot;Value&quot;] || &quot;&quot;;\r\n    if(Filter === &quot;NSFW&quot;) {\r\n     OptionGroup = {\r\n      &quot;0&quot;: &quot;Kid-Friendly&quot;,\r\n      &quot;1&quot;: &quot;Adults Only&quot;\r\n     };\r\n    } else if(Filter === &quot;Privacy&quot;) {\r\n     OptionGroup = {\r\n      &quot;55c53cfda992192581cb4f006109df47&quot;: &quot;Acquaintances&quot;,\r\n      &quot;43b5ac258be80f9a8f5bc8d3c6036e2b&quot;: &quot;Close Contacts&quot;,\r\n      &quot;9aa698f602b1e5694855cee73a683488&quot;: &quot;Contacts&quot;,\r\n      &quot;47f9082fc380ca62d531096aa1d110f1&quot;: &quot;Private&quot;,\r\n      &quot;3d067bedfe2f4677470dd6ccf64d05ed&quot;: &quot;Public&quot;\r\n     };\r\n    }\r\n    Inputs.push({\r\n     &quot;Attributes&quot;: {},\r\n     &quot;OptionGroup&quot;: OptionGroup,\r\n     &quot;Options&quot;: {\r\n      &quot;Container&quot;: 1,\r\n      &quot;ContainerClass&quot;: &quot;Desktop50 MobileFull&quot;,\r\n      &quot;Header&quot;: 1,\r\n      &quot;HeaderText&quot;: Title\r\n     },\r\n     &quot;Name&quot;: Name,\r\n     &quot;Title&quot;: Title,\r\n     &quot;Type&quot;: &quot;Select&quot;,\r\n     &quot;Value&quot;: Value\r\n    });\r\n   });\r\n   this.RenderInputs(Container, Inputs);\r\n  }\r\n }\r\n static ReSearch(input) {\r\n  let Bar = input || {},\r\n       Container = $(Bar).parent().find(&quot;.SearchContainer&quot;) || {},\r\n       GridColumns = $(Bar).attr(&quot;data-columns&quot;) || &quot;1&quot;,\r\n       List = $(Bar).attr(&quot;data-list&quot;) || &quot;&quot;,\r\n       Processor,\r\n       Query = $(Bar).val() || &quot;&quot;,\r\n       End;\r\n  if(Bar === {} || typeof Bar === &quot;undefined&quot;) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;ReSearch: The source input is missing.&quot;\r\n   });\r\n  } else if(Container === {} || typeof Container === &quot;undefined&quot;) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;ReSearch: The list container is missing.&quot;\r\n   });\r\n  } else if(List === &quot;&quot; || typeof List === &quot;undefined&quot;) {\r\n   this.Dialog({\r\n    &quot;Body&quot;: &quot;ReSearch: The list source is missing.&quot;\r\n   });\r\n  } else {\r\n   Processor = this.base + this.Base64decrypt(List) + &quot;&amp;query=&quot; + this.Base64encrypt($(Bar).val());\r\n   $(Container).empty();\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;ReSearch: Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      let Data = JSON.parse(this.AESdecrypt(data)),\r\n           AccessCode = Data.AccessCode,\r\n           Extension = Data.Extension,\r\n           ExtensionID = Data.ExtensionID,\r\n           Response = Data.Response,\r\n           SearchID = &quot;SearchList&quot; + this.UUID(),\r\n           Grid = GridColumns;\r\n      if(AccessCode !== &quot;Accepted&quot;) {\r\n       $(Container).html(this.AESdecrypt(Response.NoResults));\r\n      } else {\r\n       if(Data.ExtensionID) {\r\n        Extension = this.LoadFromDatabase(&quot;Extensions&quot;, Data.ExtensionID);\r\n       } else if(Data.Extension) {\r\n        Extension = Promise.resolve(this.AESdecrypt(Data.Extension));\r\n       } else {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;ReSearch: Neither ExtensionID nor Extension is provided.&quot;\r\n        });\r\n        return;\r\n       }\r\n       Extension.then(response =&gt; {\r\n         if(Data.ExtensionID) {\r\n          response = this.AESdecrypt(response.Data);\r\n         } if(Grid === &quot;2&quot;) {\r\n          Grid = &quot;Grid2&quot;;\r\n         } else if(Grid === &quot;3&quot;) {\r\n          Grid = &quot;Grid3&quot;;\r\n         } else if(Grid === &quot;4&quot;) {\r\n          Grid = &quot;Grid4&quot;;\r\n         } else {\r\n          Grid = &quot;NONAME&quot;;\r\n         }\r\n         $(&quot;.active-search&quot;).removeClass(&quot;active-search&quot;);\r\n         $(Container).html(&quot;&lt;div class=&#039;&quot; + Grid + &quot; &quot; + SearchID + &quot;&#039;&gt;&quot; + this.Loading + &quot;&lt;\/div&gt;&quot;);\r\n         Container = $(Container).find(&quot;.&quot; + SearchID);\r\n         let End = Response.End || &quot;Yes&quot;,\r\n              List = this.GetSortedList(Response.List || {}),\r\n              ListItemCommands = this.GetSortedList(Response.Commands || {}),\r\n              ListItems = 0,\r\n              check = (List !== {} &amp;&amp; typeof List !== &quot;undefined&quot;) ? 1 : 0;\r\n         check = (typeof List === &quot;object&quot; || check === 1) ? 1 : 0;\r\n         if(check === 1) {\r\n          check = (Query !== &quot;&quot; &amp;&amp; typeof Query !== &quot;undefined&quot;) ? 1 : 0;\r\n          $(&quot;.&quot; + SearchID).empty();\r\n          for(let i in List) {\r\n           let Key = List[i][0] || &quot;&quot;,\r\n                KeyCheck = (typeof Key !== &quot;undefined&quot;) ? 1 : 0,\r\n                Value = List[i][1] || {},\r\n                ValueCheck = (typeof Value !== &quot;undefined&quot;) ? 1 : 0;\r\n           if(KeyCheck === 1 &amp;&amp; ValueCheck === 1) {\r\n            let Search = (check === 0) ? 1 : 0,\r\n                 Result = response || &quot;&quot;;\r\n            if(Value !== {} &amp;&amp; typeof Value !== &quot;undefined&quot;) {\r\n             for(var j in Value) {\r\n              if(typeof Result === &quot;string&quot;) {\r\n               Result = Result.replaceAll(Value[j][0], Value[j][1]);\r\n              }\r\n             } if(Result.search(Query) &gt; -1) {\r\n              Search += 1;\r\n             } if(Result.toLowerCase().search(Query.toLowerCase()) &gt; -1) {\r\n              Search += 1;\r\n             } if(Search &gt; 0) {\r\n              ListItems += 1;\r\n              $(Container).append(&quot;&lt;div class=&#039;SearchListItem&quot; + ListItems + &quot; h&#039;&gt;&quot; + Result + &quot;&lt;\/div&gt;\\r\\n&quot;);\r\n              $(Container).find(&quot;.SearchListItem&quot; + ListItems).fadeIn(Math.round((ListItems \/ 2) * 500));\r\n             }\r\n            }\r\n           }\r\n          } for(let i in ListItemCommands) {\r\n           let CurrentListItemCommands = ListItemCommands[i][1];\r\n           if(typeof CurrentListItemCommands !== &quot;undefined&quot;) {\r\n            setTimeout(() =&gt; {\r\n             this.ExecuteCommands(CurrentListItemCommands);\r\n            }, Math.round((i \/ 2) * 500));\r\n           }\r\n          } if(ListItems === 0) {\r\n           $(Container).html(this.AESdecrypt(Response.NoResults));\r\n          } else {\r\n           $(&quot;.&quot; + SearchID).addClass(&quot;active-search&quot;);\r\n           $(&quot;.&quot; + SearchID).data(&quot;end&quot;, End);\r\n           $(&quot;.&quot; + SearchID).data(&quot;extension&quot;, response);\r\n           $(&quot;.&quot; + SearchID).data(&quot;loading&quot;, false);\r\n           $(&quot;.&quot; + SearchID).data(&quot;next-offset&quot;, Response.Offset);\r\n           $(&quot;.&quot; + SearchID).data(&quot;processor&quot;, Processor);\r\n           $(&quot;.&quot; + SearchID).data(&quot;query&quot;, Query);\r\n           if(End === &quot;No&quot;) {\r\n            let MoreResults = &quot;&lt;div class=&#039;NONAME&#039;&gt;\\r\\n&quot;;\r\n            MoreResults += &quot;&lt;button class=&#039;BBB MoreResults MoreResults&quot; + SearchID + &quot; v2 v2w&#039;&gt;More Results&lt;\/button&gt;\\r\\n&quot;;\r\n            MoreResults += &quot;&lt;\/div&gt;\\r\\n&quot;;\r\n            $(MoreResults).insertAfter(Container);\r\n            $(&quot;.MoreResults&quot; + SearchID).on(&quot;click&quot;, () =&gt; {\r\n             this.MoreResults(&quot;.&quot; + SearchID);\r\n            });\r\n           }\r\n          }\r\n         }\r\n       }).catch(error =&gt; {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;ReSearch: Error loading extension. Please see below:&quot;,\r\n         &quot;Scrollable&quot;: error.message\r\n        });\r\n       });\r\n      }\r\n     }\r\n    },\r\n    url: Processor\r\n   });\r\n  }\r\n }\r\n static SaveToDatabase(Store, Data) {\r\n  if(typeof Store !== &quot;string&quot; || Store.trim() === &quot;&quot;) {\r\n   return Promise.reject(new Error(&quot;The Store Identifier is missing.&quot;));\r\n  }\r\n  if(!Array.isArray(Data)) {\r\n   return Promise.reject(new Error(&quot;Data must be an array.&quot;));\r\n  }\r\n  for(const pair of Data) {\r\n   if(!pair.hasOwnProperty(&quot;ID&quot;)) {\r\n    return Promise.reject(new Error(&quot;Each data item must have an ID property.&quot;));\r\n   }\r\n  }\r\n  return new Promise((resolve, reject) =&gt; {\r\n   const openRequest = indexedDB.open(&quot;OuterHaven&quot;);\r\n   openRequest.onupgradeneeded = (event) =&gt; {\r\n    const db = event.target.result;\r\n    if(db.objectStoreNames.contains(Store)) {\r\n     db.deleteObjectStore(Store);\r\n    }\r\n    db.createObjectStore(Store, {\r\n     keyPath: &quot;ID&quot;\r\n    });\r\n   };\r\n   openRequest.onerror = () =&gt; reject(openRequest.error);\r\n   openRequest.onsuccess = () =&gt; {\r\n    const db = openRequest.result;\r\n    const transaction = db.transaction(Store, &quot;readwrite&quot;);\r\n    const store = transaction.objectStore(Store, {\r\n     keyPath: &quot;ID&quot;\r\n    });\r\n    Data.forEach(pair =&gt; {\r\n     store.put(pair);\r\n    });\r\n    transaction.oncomplete = () =&gt; {\r\n     db.close();\r\n     resolve();\r\n    };\r\n    transaction.onerror = () =&gt; {\r\n     db.close();\r\n     reject(transaction.error);\r\n    };\r\n   };\r\n   openRequest.onerror = () =&gt; reject(openRequest.error);\r\n  });\r\n }\r\n static SetUIVariant(NewVariant = this.DefaultUI) {\r\n  if($(location).attr(&quot;href&quot;) === &quot;[App.Base]\/&quot; &amp;&amp; NewVariant !== this.UIVariant) {\r\n   this.UIVariant = NewVariant;\r\n   $(&quot;.SideBar&quot;).hide(&quot;slide&quot;, {\r\n    direction: &quot;left&quot;\r\n   }, 500);\r\n   $(&quot;.TopBar .MenuContainer&quot;).hide(&quot;slide&quot;, {\r\n    direction: &quot;up&quot;\r\n   }, 500);\r\n   setTimeout(() =&gt; {\r\n    if(NewVariant === &quot;0&quot;) {\r\n     $(&quot;.TopHome, .TopSearchBar&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBar&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBar .MenuContainer&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBarClassic&quot;).show(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n    } else if(NewVariant === &quot;1&quot;) {\r\n     $(&quot;.SideBar&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;left&quot;\r\n     }, 500);\r\n     $(&quot;.TopHome, .TopSearchBar&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBarClassic&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBar&quot;).show(&quot;slide&quot;, {\r\n      direction: &quot;down&quot;\r\n     }, 500);\r\n    } else if(NewVariant === &quot;2&quot;) {\r\n     $(&quot;.TopBar .MenuContainer&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBar&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopBarClassic&quot;).hide(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopHome&quot;).show(&quot;slide&quot;, {\r\n      direction: &quot;up&quot;\r\n     }, 500);\r\n     $(&quot;.TopSearchBar&quot;).show(&quot;slide&quot;, {\r\n      direction: &quot;down&quot;\r\n     }, 500);\r\n    }\r\n   }, 600);\r\n  }\r\n }\r\n static SignIn(SecurityKey = &quot;&quot;) {\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    this.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     this.Crash(data);\r\n    } else {\r\n     const Data = JSON.parse(this.AESdecrypt(data));\r\n     this.ExecuteCommands(Data.Commands);\r\n     this.LocalData(&quot;Save&quot;, &quot;SecurityKey&quot;, SecurityKey);\r\n     this.GoToParent(&quot;MainView&quot;);\r\n    }\r\n   },\r\n   url: this.base + this.AESdecrypt(&quot;[App.MainUI]&quot;)\r\n  });\r\n }\r\n static SignOut() {\r\n  this.InstantSignOut();\r\n  setTimeout(() =&gt; {\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = this.RenderView(data);\r\n      this.ExecuteCommands(Data.Commands);\r\n      Data.View.then(response =&gt; {\r\n       $(this.DefaultContainer).html(response);\r\n       $(this.DefaultContainer).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n       this.UpdateContent(&quot;.Menu&quot;, &quot;[App.Menu]&quot;, &quot;AES&quot;);\r\n       $(&quot;.AddContent&quot;).fadeOut(500);\r\n       $(&quot;.SideBar&quot;).hide(&quot;slide&quot;, {\r\n        direction: &quot;left&quot;\r\n       }, 500);\r\n       $(&quot;.TopBar .MenuContainer&quot;).slideUp(500);\r\n       setTimeout(() =&gt; {\r\n        $(&quot;.AddContent&quot;).remove();\r\n       }, 600);\r\n      }).catch(error =&gt; {\r\n       this.Dialog({\r\n        &quot;Body&quot;: &quot;SignOut: Error rendering view data. Please see below:&quot;,\r\n        &quot;Scrollable&quot;: error.message\r\n       });\r\n      });\r\n     }\r\n    },\r\n    url: this.base + this.AESdecrypt(&quot;[App.Gateway]&quot;)\r\n   });\r\n  }, 600);\r\n }\r\n static UpdateButton(button, data) {\r\n  var Attributes,\r\n   Button = button || {},\r\n   Data = data || {},\r\n   Text = $(button).text() || &quot;Error&quot;;\r\n  if(Button !== {} &amp;&amp; Data !== {}) {\r\n   Attributes = Data.Attributes || {};\r\n   Text = Data.Text || Text;\r\n   if(Attributes !== {}) {\r\n    $.each(Attributes, (key, value) =&gt; {\r\n     $(Button).attr(key, value);\r\n    });\r\n   }\r\n   $(Button).html(Text);\r\n  }\r\n }\r\n static UpdateContent(Container, View, Encryption = &quot;&quot;) {\r\n  Container = Container || this.DefaultContainer;\r\n  if(Encryption === &quot;AES&quot;) {\r\n   View = this.AESdecrypt(View);\r\n  } else {\r\n   View = this.Base64decrypt(View);\r\n  } if($(Container).html() === &quot;&quot;) {\r\n   $(Container).html(&quot;&lt;h2 class=&#039;CenterText InnerMargin&#039;&gt;&quot; + this.Loading + &quot;&lt;\/h2&gt;\\r\\n&quot;);\r\n  }\r\n  setTimeout(() =&gt; {\r\n   $.ajax({\r\n    error: (error) =&gt; {\r\n     this.Dialog({\r\n      &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: this.AESencrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (data) =&gt; {\r\n     if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n      this.Crash(data);\r\n     } else {\r\n      const Data = this.RenderView(data);\r\n      $(Container).empty();\r\n      if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n       Data.View.then(response =&gt; {\r\n        if(Data.AddTopMargin === 1) {\r\n         $(Container).append(&quot;&lt;div class=&#039;TopBarMargin&#039;&gt;&lt;\/div&gt;\\r\\n&quot;);\r\n        }\r\n        $(Container).append(response);\r\n        $(Container).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n        this.ExecuteCommands(Data.Commands);\r\n       }).catch(error =&gt; {\r\n        this.Dialog({\r\n         &quot;Body&quot;: &quot;UpdateContent: Error rendering view data. Please see below:&quot;,\r\n         &quot;Scrollable&quot;: error.message\r\n        });\r\n       });\r\n      }\r\n     }\r\n    },\r\n    url: this.base + View\r\n   });\r\n  }, 600);\r\n }\r\n static UpdateContentRecursive(Container, View, Interval = 6000, Encryption = &quot;&quot;) {\r\n  this.UpdateContent(Container, View, Encryption);\r\n  setInterval(() =&gt; {\r\n   if($(Container).is(&quot;:visible&quot;)) {\r\n    this.UpdateContent(Container, View, Encryption);\r\n   }\r\n  }, Interval);\r\n }\r\n static UpdateCoverPhoto(Container, Image) {\r\n  var Container = Container || this.DefaultContainer,\r\n        Image = Image || &quot;[Media:CP]&quot;;\r\n  if(Image !== &quot;&quot; &amp;&amp; typeof Image !== &quot;undefined&quot;) {\r\n   $(Container).css({\r\n    &quot;background&quot;: &quot;url(&#039;&quot; + Image + &quot;&#039;) no-repeat center center fixed&quot;,\r\n    &quot;background-size&quot;: &quot;cover&quot;,\r\n    &quot;transition&quot;: &quot;background 1s ease-in-out&quot;\r\n   });\r\n  }\r\n }\r\n static UpdateUIVariant(NewUIVariant) {\r\n  var NewUIVariant = NewUIVariant || this.UIVariant;\r\n  this.SetUIVariant(NewUIVariant);\r\n  $(&quot;.PersonalUIVariant&quot;).val(NewUIVariant);\r\n }\r\n static Upload(Button) {\r\n  let Form = $(Button).attr(&quot;data-form&quot;),\r\n       Inputs = &quot;input, number, select, textarea&quot;,\r\n       Pass = 1,\r\n       Processor = $(Button).attr(&quot;data-processor&quot;),\r\n       Text = $(Button).text();\r\n  $(Button).text(Text);\r\n  $(Button).prop(&quot;disabled&quot;, true);\r\n  $(Form).find(&quot;.req&quot;).each(() =&gt; {\r\n   $(this).removeClass(&quot;Red&quot;);\r\n   if($(this).val() === &quot;&quot;) {\r\n    $(this).addClass(&quot;Red&quot;);\r\n    Pass = 0;\r\n   }\r\n  });\r\n  if(Pass === 0) {\r\n   $(Button).text(Text);\r\n   $(Button).prop(&quot;disabled&quot;, false);\r\n   return;\r\n  } else {\r\n   let Data = new FormData(),\r\n        Files = $(Form).find(&quot;.FileList&quot;)[0].files,\r\n        Inputs = $(Form).find(Inputs).serializeArray(),\r\n        Request = new XMLHttpRequest();\r\n   for(var i = 0; i &lt; Files.length; i++) {\r\n    if(Files[i].size &gt; Math.round(500000 * 100)) {\r\n     console.log(&quot;The media file &quot; + Files[i].name + &quot; comes in at &quot; + Files[i].size + &quot;. The maximum allowed file size is 500MB.&quot;);\r\n    } else {\r\n     Data.append(&quot;Uploads[&quot; + i + &quot;]&quot;, Files[i]);\r\n    }\r\n   }\r\n   for(var i = 0; i &lt; Inputs.length; i++) {\r\n    Data.append(Inputs[i].name, this.AESencrypt(Inputs[i].value));\r\n   }\r\n   Request.upload.addEventListener(&quot;progress&quot;, function(event) {\r\n    var Percent = Math.round((event.loaded \/ event.total) * 100),\r\n     ProgressContainer = &quot;&quot;;\r\n    ProgressContainer += &quot;&lt;progress class=&#039;ProgressBar&#039; max=&#039;100&#039; value=&#039;&quot; + Percent + &quot;&#039;&gt;&lt;\/progress&gt;\\r\\n&quot;;\r\n    ProgressContainer += &quot;&lt;h4 class=&#039;ProgressText&#039;&gt;&quot; + Percent + &quot;% uploaded... Please wait.&lt;\/h4&gt;\\r\\n&quot;;\r\n    $(&quot;.Uploads&quot;).html(ProgressContainer);\r\n   }, false);\r\n   Request.addEventListener(&quot;load&quot;, function(event) {\r\n    var data = event.target.responseText;\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     this.Crash(data);\r\n    } else {\r\n     var AccessCode = &quot;Denied&quot;,\r\n      Class,\r\n      Passed,\r\n      Response,\r\n      Type,\r\n      Data = JSON.parse(this.AESdecrypt(data));\r\n     AccessCode = Data.AccessCode || AccessCode;\r\n     Response = Data.JSON || {};\r\n     Type = Data.ResponseType || &quot;Dialog&quot;;\r\n     if(Response === &quot;&quot; || typeof Response === &quot;undefined&quot;) {\r\n      this.Dialog({\r\n       &quot;Body&quot;: &quot;&lt;em&gt;[App.Name]&lt;\/em&gt; returned an empty response. Check the processor within the following URI fragment: &quot; + Processor + &quot;.&quot;\r\n      });\r\n     } else {\r\n      if(AccessCode === &quot;Denied&quot;) {\r\n       this.Dialog({\r\n        &quot;Body&quot;: &quot;The upload was rejected, please refer to the console.&quot;,\r\n        &quot;Scrollable&quot;: JSON.stringify(Response)\r\n       });\r\n      } else {\r\n       Passed = Response[&quot;Passed&quot;] || {};\r\n       if(Passed !== {} &amp;&amp; typeof Passed !== &quot;undefined&quot;) {\r\n        $($(Form).find(&quot;.EmptyOnSuccess&quot;)).each(function(k, v) {\r\n         $(this).val(&quot;&quot;);\r\n        });\r\n        $(&quot;.Uploads&quot;).html(&quot;&quot;).addClass(&quot;SideScroll&quot;);\r\n        for(var i = 0; i &lt; Passed.length; i++) {\r\n         $(&quot;.Uploads&quot;).append(Passed[i][&quot;HTML&quot;]);\r\n        }\r\n       }\r\n      }\r\n      $(Button).prop(&quot;disabled&quot;, false);\r\n      $(Button).text(&quot;Upload&quot;);\r\n     }\r\n    }\r\n   }.bind(this), false);\r\n   Request.open(&quot;POST&quot;, this.base + this.Base64decrypt(Processor), true);\r\n   Request.setRequestHeader(&quot;Language&quot;, this.Base64encrypt(this.LocalData(&quot;Get&quot;, &quot;Language&quot;)));\r\n   Request.setRequestHeader(&quot;Token&quot;, this.Base64encrypt(this.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;)));\r\n   Request.send(Data);\r\n  }\r\n }\r\n static UUID() {\r\n  var UUID = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + &quot;-&quot;;\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + &quot;-&quot;;\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + &quot;-&quot;;\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + &quot;-&quot;;\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n  UUID += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + &quot;-&quot;;\r\n  UUID += this.uniqid();\r\n  return UUID;\r\n }\r\n static W(link, target) {\r\n  var W = window.open(link, target);\r\n  W.focus();\r\n }\r\n static uniqid(prefix = &quot;&quot;, more_entropy) {\r\n  if(typeof prefix === &quot;undefined&quot;) {\r\n   prefix = &quot;&quot;;\r\n  }\r\n  var retId,\r\n   formatSeed = function(seed, reqWidth) {\r\n    seed = parseInt(seed, 10).toString(16);\r\n    if(reqWidth &lt; seed.length) {\r\n     return seed.slice(seed.length - reqWidth);\r\n    }\r\n    if(reqWidth &gt; seed.length) {\r\n     return Array(1 + (reqWidth - seed.length)).join(&#039;0&#039;) + seed;\r\n    }\r\n    return seed;\r\n   };\r\n  if(!this.php_js.uniqidSeed) {\r\n   this.php_js.uniqidSeed = Math.floor(Math.random() * 0x75bcd15);\r\n  }\r\n  this.php_js.uniqidSeed++;\r\n  retId = prefix;\r\n  retId += formatSeed(parseInt(new Date().getTime() \/ 1000, 10), 8);\r\n  retId += formatSeed(this.php_js.uniqidSeed, 5);\r\n  if(more_entropy) {\r\n   retId += (Math.random() * 10).toFixed(8).toString();\r\n  }\r\n  return retId;\r\n }\r\n}\r\n$(document).on(&quot;change&quot;, &quot;select[name=&#039;ProductQuantity&#039;]&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget),\r\n           Quantity = $Input.find(&quot;option:selected&quot;).val();\r\n let Price = $Input.parent().find(&quot;.AddToCart&quot;).text();\r\n Price = Price.replace(&quot;$&quot;, &quot;&quot;);\r\n Price = parseInt(Price) * parseInt(Quantity);\r\n $Input.parent().find(&quot;.AddToCart&quot;).text(&quot;$&quot; + Price);\r\n});\r\n$(document).on(&quot;change&quot;, &quot;.UpdateRangeValue&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget),\r\n  Price = $Input.parent().find(&quot;.AddToCart&quot;).text(),\r\n  Quantity = $Input.find(&quot;option:selected&quot;).val();\r\n Price = Price.replace(&quot;$&quot;, &quot;&quot;);\r\n Price = parseInt(Price) * parseInt(Quantity);\r\n $Input.parent().find(&quot;.AddToCart&quot;).text(&quot;$&quot; + Price);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Attach&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           $Input = $(document).find(OH.Base64decrypt($Button.attr(&quot;data-input&quot;))),\r\n           Media = $Button.attr(&quot;data-media&quot;) || &quot;&quot;;\r\n $Button.prop(&quot;disabled&quot;, true);\r\n if(!$Input.length) {\r\n  OH.Dialog({\r\n   &quot;Body&quot;: &quot;Failed to find the attachment input. Here is the source data: &quot; + $Button.attr(&quot;data-input&quot;) + &quot;.&quot;\r\n  });\r\n } else if(!Media.length) {\r\n  OH.Dialog({\r\n   &quot;Body&quot;: &quot;Failed to find the attachment media. Here is the source data: &quot; + Media + &quot;.&quot;\r\n  });\r\n } else {\r\n  $Input.val(Media);\r\n  $Button.text(OH.Loading);\r\n  OH.CloseCard();\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Block&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           View = $Button.attr(&quot;data-view&quot;) || OH.AESencrypt(&quot;&quot;);\r\n $Button.prop(&quot;disabled&quot;, &quot;true&quot;);\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Block: Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    const Data = OH.RenderView(data);\r\n    $Button.prop(&quot;disabled&quot;, false);\r\n    $Button.text(Data.View);\r\n   }\r\n  },\r\n  url: OH.base + OH.AESdecrypt(View)\r\n });\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Clone&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           CloneID = &quot;Clone&quot; + OH.UUID();\r\n let Destination = $Button.attr(&quot;data-destination&quot;),\r\n      Source = $($Button.attr(&quot;data-source&quot;)).text();\r\n Source = OH.Base64decrypt(Source.trim());\r\n Source = Source.replaceAll(&quot;[Clone.ID]&quot;, CloneID);\r\n $(Destination).append(Source);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloneAttachments&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           CloneID = &quot;AttachmentClone&quot; + OH.UUID(),\r\n           Destination = $Button.attr(&quot;data-destination&quot;),\r\n           InjectCloneID = (cloneID, data) =&gt; {\r\n            let link = &quot;&quot;,\r\n                 pairs = data.substring(data.indexOf(&quot;?&quot;) + 1).split(&quot;&amp;&quot;);\r\n            for(var i = 0; i &lt; pairs.length; i++) {\r\n             if(!pairs[i]) {\r\n              continue;\r\n             } else {\r\n              let pair = pairs[i].split(&quot;=&quot;);\r\n              if(pair[0] === &quot;AddTo&quot;) {\r\n               pair[1] = OH.Base64decrypt(pair[1]);\r\n               pair[1] = pair[1].replaceAll(&quot;[Clone.ID]&quot;, cloneID);\r\n               pair[1] = OH.Base64encrypt(pair[1]);\r\n              }\r\n              link += &quot;&amp;&quot; + pair[0] + &quot;=&quot; + pair[1];\r\n             }\r\n            }\r\n            return link;\r\n           },\r\n           RemoveAfterUse = $Button.attr(&quot;data-remove&quot;) || &quot;off&quot;;\r\n let Source = $($Button.attr(&quot;data-source&quot;)).text();\r\n Source = OH.Base64decrypt(Source.trim());\r\n Source = Source.replaceAll(&quot;[Clone.ID]&quot;, CloneID);\r\n AttachmentList = $(Source).find(&quot;.AttachmentList&quot; + CloneID).attr(&quot;data-view&quot;);\r\n AttachmentList = OH.AESdecrypt(AttachmentList);\r\n AttachmentList = AttachmentList.replaceAll(&quot;[Clone.ID]&quot;, CloneID);\r\n AttachmentList = InjectCloneID(CloneID, AttachmentList);\r\n $(Destination).append(Source);\r\n $(&quot;.AttachmentList&quot; + CloneID).attr(&quot;data-view&quot;, OH.AESencrypt(AttachmentList));\r\n if(RemoveAfterUse === &quot;on&quot;) {\r\n  $Button.prop(&quot;disabled&quot;, true);\r\n  $Button.slideUp(500);\r\n  setTimeout(() =&gt; {\r\n   $Button.remove();\r\n  }, 600);\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseAllCards&quot;, () =&gt; {\r\n $(&quot;.CardOverlay&quot;).each(() =&gt; {\r\n  setTimeout(() =&gt; {\r\n   OH.CloseCard();\r\n  }, 500);\r\n });\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseAllDialogs&quot;, () =&gt; {\r\n $(&quot;.DialogOverlay&quot;).each(() =&gt; {\r\n  setTimeout(() =&gt; {\r\n   OH.CloseDialog();\r\n  }, 500);\r\n });\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseAllFirSTEPTools&quot;, () =&gt; {\r\n OH.CloseAllFirSTEPTools();\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseBottomBar&quot;, () =&gt; {\r\n $(&quot;.BottomBar&quot;).hide(&quot;slide&quot;, {\r\n  direction: &quot;down&quot;\r\n }, 500);\r\n setTimeout(() =&gt; {\r\n  $(&quot;.BottomBar&quot;).remove();\r\n }, 500);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseBulletins&quot;, () =&gt; {\r\n $(&quot;.Bulletins&quot;).hide(&quot;slide&quot;, {\r\n  direction: &quot;right&quot;\r\n }, 500);\r\n setTimeout(() =&gt; {\r\n  $(&quot;.Bulletins&quot;).empty();\r\n }, 600);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseCard&quot;, (event) =&gt; {\r\n OH.CloseCard($(event.currentTarget).attr(&quot;data-id&quot;));\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseDialog&quot;, (event) =&gt; {\r\n OH.CloseDialog($(event.currentTarget).attr(&quot;data-id&quot;));\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseFirSTEPTool&quot;, (event) =&gt; {\r\n OH.CloseFirSTEPTool();\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CloseNetMap&quot;, () =&gt; {\r\n OH.CloseNetMap();\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.CreditExchange&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Form = &quot;.CE&quot; + $Button.attr(&quot;data-id&quot;);\r\n let Price = $Button.attr(&quot;data-price&quot;);\r\n Price = $(Form).find(&quot;.RangeInput&quot; + $Button.attr(&quot;data-id&quot;)).val();\r\n if($.isNumeric(Price)) {\r\n  $Button.prop(&quot;disabled&quot;, &quot;true&quot;);\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     const Data = OH.RenderView(data);\r\n     if(Data.AccessCode === &quot;Denied&quot;) {\r\n      $Button.prop(&quot;disabled&quot;, false);\r\n     }\r\n    }\r\n   },\r\n   url: OH.base + OH.Base64decrypt($Button.attr(&quot;data-u&quot;)) + OH.Base64encrypt(Price)\r\n  });\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Delete&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           Processor = $Button.attr(&quot;data-processor&quot;),\r\n           Text = $Button.text();\r\n $Button.prop(&quot;disabled&quot;, true);\r\n $Button.text(&quot;Dispatching...&quot;);\r\n if(Processor === &quot;&quot; || typeof Processor === &quot;undefined&quot;) {\r\n  OH.DeleteContainer($Button);\r\n } else {\r\n  if(Encryption === &quot;AES&quot;) {\r\n   Processor =  OH.AESdecrypt(Processor);\r\n  } else {\r\n   Processor =  OH.Base64decrypt(Processor);\r\n  }\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     const Data = OH.RenderView(data);\r\n     if(Data.AccessCode === &quot;Denied&quot;) {\r\n      $Button.text(&quot;Try Later&quot;);\r\n     } else {\r\n      $Button.text(&quot;Done!&quot;);\r\n      OH.DeleteContainer($Button);\r\n     }\r\n    }\r\n   },\r\n   url: OH.base + OH.Base64decrypt(Processor)\r\n  });\r\n }\r\n setTimeout(() =&gt; {\r\n  $Button.prop(&quot;disabled&quot;, false);\r\n  $Button.text(Text);\r\n }, 6000);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Disable&quot;, (event) =&gt; {\r\n $(event.currentTarget).prop(&quot;disabled&quot;, true);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Download&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n  Downloader = $Button.attr(&quot;data-view&quot;) || &quot;&quot;,\r\n  Media = $Button.attr(&quot;data-media&quot;) || &quot;&quot;;\r\n if(Media === &quot;&quot; || typeof Media === &quot;undefined&quot;) {\r\n  OH.Dialog({\r\n   &quot;Body&quot;: &quot;No media to download.&quot;\r\n  });\r\n } else {\r\n  Media = OH.Base64decrypt(Media).split(&quot;;&quot;);\r\n  $.each(Media, (key, value) =&gt; {\r\n   $.ajax({\r\n    data: {\r\n     FilePath: value\r\n    },\r\n    error: (error) =&gt; {\r\n     OH.Dialog({\r\n      &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n      &quot;Scrollable&quot;: JSON.stringify(error)\r\n     });\r\n    },\r\n    headers: {\r\n     Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n     Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n    },\r\n    method: &quot;POST&quot;,\r\n    success: (blob, status, xhr) =&gt; {\r\n     const Disposition = xhr.getResponseHeader(&quot;Content-Disposition&quot;),\r\n      File = &quot;&quot;;\r\n     if(Disposition &amp;&amp; Disposition.indexOf(&quot;attachment&quot;) !== -1) {\r\n      const FileRegex = \/filename[^;=\\n]*=(([&#039;&quot;]).*?\\2|[^;\\n]*)\/;\r\n      Matches = FileRegex.exec(Disposition);\r\n      if(Matches != null &amp;&amp; Matches[1]) {\r\n       File = Matches[1].replace(\/[&#039;&quot;]\/g, &quot;&quot;);\r\n       if(typeof window.navigator.msSaveBlob !== &quot;undefined&quot;) {\r\n        window.navigator.msSaveBlob(blob, File);\r\n       } else {\r\n        let URL = window.webkitURL || window.URL,\r\n         DownloadURL;\r\n        DownloadURL = URL.createObjectURL(blob);\r\n        if(File) {\r\n         const a = document.createElement(&quot;a&quot;);\r\n         if(typeof a.download === &quot;undefined&quot;) {\r\n          window.location.href = DownloadURL;\r\n         } else {\r\n          a.href = DownloadURL;\r\n          a.download = File;\r\n          document.body.appendChild(a);\r\n          a.click();\r\n         }\r\n        } else {\r\n         window.location.href = DownloadURL;\r\n        }\r\n        setTimeout(() =&gt; {\r\n         URL.revokeObjectURL(DownloadURL);\r\n        }, 100);\r\n       }\r\n      }\r\n     }\r\n    },\r\n    url: OH.base + OH.Base64decrypt(Downloader),\r\n    xhrFields: {\r\n     responseType: &quot;blob&quot;\r\n    }\r\n   });\r\n  });\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.GoToParent&quot;, (event) =&gt; {\r\n let $Button = $(event.currentTarget),\r\n      Data = $Button.attr(&quot;data-type&quot;);\r\n OH.GoToParent(Data);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.GoToView&quot;, (event) =&gt; {\r\n let $Button = $(event.currentTarget),\r\n      Data = $Button.attr(&quot;data-type&quot;).split(&quot;;&quot;),\r\n      Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n      ID = Data[0] || &quot;&quot;,\r\n      Parent = $(&quot;.ParentPage&quot; + ID).parent(),\r\n      View = Data[1] || &quot;&quot;;\r\n if(Encryption === &quot;AES&quot;) {\r\n  View = OH.AESdecrypt(View);\r\n } else {\r\n  View = OH.Base64decrypt(View);\r\n }\r\n setTimeout(() =&gt; {\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;GoToView: Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     const Data = OH.RenderView(data),\r\n               ChildView = &quot;ViewPage&quot; + ID,\r\n               ParentView = &quot;ParentPage&quot; + ID;\r\n     Data.View.then(response =&gt; {\r\n      OH.GoToView(ParentView, ChildView, response);\r\n      if(ChildView.length &amp;&amp; $(ChildView).is(&quot;:visible&quot;)) {\r\n       OH.ExecuteCommands(Data.Commands);\r\n      } else {\r\n       setTimeout(() =&gt; {\r\n        OH.ExecuteCommands(Data.Commands);\r\n       }, 600);\r\n      }\r\n     }).catch(error =&gt; {\r\n      OH.Dialog({\r\n       &quot;Body&quot;: &quot;GoToView: Error rendering view data. Please see below:&quot;,\r\n       &quot;Scrollable&quot;: error.message\r\n      });\r\n     });\r\n    }\r\n   },\r\n   url: OH.base + View\r\n  });\r\n }, 500);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.InstantSignOut&quot;, (event) =&gt; {\r\n OH.InstantSignOut();\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.MarkAsRead&quot;, (event) =&gt; {\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    OH.RenderView(data);\r\n   }\r\n  },\r\n  url: OH.base + OH.Base64decrypt($(event.currentTarget).attr(&quot;data-MAR&quot;))\r\n });\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Menu button&quot;, (event) =&gt; {\r\n $(&quot;.SideBar&quot;).hide(&quot;slide&quot;, {\r\n  direction: &quot;left&quot;\r\n }, 500);\r\n $(&quot;.TopBar .MenuContainer&quot;).slideUp(500);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.OpenBottomBar&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           View = $Button.attr(&quot;data-view&quot;) || &quot;&quot;;\r\n if(View !== &quot;&quot; &amp;&amp; typeof View !== &quot;undefined&quot;) {\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     const Data = OH.RenderView(data);\r\n     if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n      Data.View.then(response =&gt; {\r\n       $(&quot;body&quot;).append(response);\r\n       $(&quot;body&quot;).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n       $(&quot;.BottomBar&quot;).show(&quot;slide&quot;, {\r\n        direction: &quot;down&quot;\r\n       }, 500);\r\n       OH.ExecuteCommands(Data.Commands);\r\n      }).catch(error =&gt; {\r\n       OH.Dialog({\r\n        &quot;Body&quot;: &quot;OpenBottomBar: Error rendering view data. Please see below:&quot;,\r\n        &quot;Scrollable&quot;: error.message\r\n       });\r\n      });\r\n     }\r\n    }\r\n   },\r\n   url: OH.base + OH.AESdecrypt(View)\r\n  });\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.OpenCard&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           View = $Button.attr(&quot;data-view&quot;) || &quot;&quot;;\r\n OH.OpenCard(View, Encryption);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.OpenCardFromJSON&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Data = $Button.attr(&quot;data-json&quot;) || OH.Base64encrypt({});\r\n OH.Card(OH.Base64decrypt(Data));\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.OpenDialog&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           View = $Button.attr(&quot;data-view&quot;) || &quot;&quot;;\r\n OH.OpenDialog(View, Encryption);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.OpenFirSTEPTool&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           FirSTEPTool = $Button.attr(&quot;data-fst&quot;) || &quot;&quot;,\r\n           Ground = $Button.attr(&quot;data-ground&quot;) || &quot;&quot;;\r\n OH.OpenFirSTEPTool(Ground, FirSTEPTool);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.PS&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Data = $Button.attr(&quot;data-type&quot;).split(&quot;;&quot;);\r\n $.each($(Data[0]).find(Data[1]), function() {\r\n  $(this).hide(&quot;slide&quot;, {\r\n   direction: &quot;left&quot;\r\n  }, 500);\r\n });\r\n setTimeout(() =&gt; {\r\n  $(Data[2]).fadeIn(500);\r\n }, 600);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.PSAccordion&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Data = $Button.attr(&quot;data-type&quot;).split(&quot;;&quot;);\r\n $.each($(Data[0]).find(Data[1]), function() {\r\n  $(this).slideUp(500);\r\n });\r\n setTimeout(() =&gt; {\r\n  $(Data[2]).slideDown(500);\r\n }, 600);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.PSBack&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n  Data = $Button.attr(&quot;data-type&quot;).split(&quot;;&quot;);\r\n $.each($(Data[0]).find(Data[1]), function() {\r\n  $(this).fadeOut(500);\r\n });\r\n setTimeout(() =&gt; {\r\n  $(Data[2]).show(&quot;slide&quot;, {\r\n   direction: &quot;left&quot;\r\n  }, 500);\r\n }, 600);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.PSPill&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n  Data = $Button.attr(&quot;data-type&quot;).split(&quot;;&quot;);\r\n $($Button.parent(&quot;.Pill&quot;)).children(&quot;button&quot;).removeClass(&quot;Active&quot;);\r\n $Button.addClass(&quot;Active&quot;);\r\n $.each($(Data[0]).find(Data[1]), (event) =&gt; {\r\n  $($(event.currentTarget)).fadeOut(500);\r\n });\r\n setTimeout(() =&gt; {\r\n  $(Data[2]).show(&quot;slide&quot;, {\r\n   direction: &quot;right&quot;\r\n  }, 500);\r\n }, 600);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.Reg&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n  Language = $Button.attr(&quot;data-type&quot;) || &quot;[App.Language]&quot;;\r\n OH.LocalData(&quot;Save&quot;, &quot;Language&quot;, Language);\r\n $(&quot;.RegSel&quot;).fadeOut(500);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.RemoveFromAttachments&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n  Input = $(document).find($Button.attr(&quot;data-input&quot;)),\r\n  ID = $Button.attr(&quot;data-id&quot;),\r\n  Value = OH.Base64decrypt($(Input).val());\r\n if(Value.search(&quot;;&quot;) &gt; 0) {\r\n  Value = Value.replace(ID + &quot;;&quot;, &quot;&quot;);\r\n } else {\r\n  Value = Value.replace(ID, &quot;&quot;);\r\n }\r\n if(Value === &quot;&quot; || typeof Value === &quot;undefined&quot;) {\r\n  $(Input).val(Value);\r\n } else {\r\n  $(Input).val(OH.Base64encrypt(Value));\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.ReportContent&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n            ID = $Button.attr(&quot;data-id&quot;) || &quot;&quot;,\r\n            Type = $Button.attr(&quot;data-type&quot;) || &quot;&quot;;\r\n let Processor = OH.AESdecrypt($Button.attr(&quot;data-processor&quot;));\r\n $Button.prop(&quot;disabled&quot;, true);\r\n if(ID !== &quot;&quot; &amp;&amp; typeof ID !== &quot;undefined&quot;) {\r\n  Processor = Processor.replace(&quot;[ID]&quot;, ID);\r\n  $.ajax({\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Report: Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     const Data = OH.RenderView(data);\r\n     if(Data.AccessCode === &quot;Accepted&quot;) {\r\n      OH.CloseCard();\r\n     }\r\n    }\r\n   },\r\n   url: OH.base + Processor + &quot;&amp;Type=&quot; + Type\r\n  });\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.SendData&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           Form = $Button.attr(&quot;data-form&quot;) || &quot;&quot;,\r\n           FormData = OH.Encrypt($(Form).find(OH.Inputs).serializeArray()) || {},\r\n           RequiredInputs = $(Form).find(&quot;.req&quot;).length,\r\n           Target = $Button.attr(&quot;data-target&quot;) || Form,\r\n           Text = $Button.text();\r\n let Pass = 0,\r\n      Processor = $Button.attr(&quot;data-processor&quot;) || &quot;&quot;;\r\n if(Encryption === &quot;AES&quot;) {\r\n  Processor = OH.AESdecrypt(Processor);\r\n } else {\r\n  Processor = OH.Base64decrypt(Processor);\r\n }\r\n $Button.prop(&quot;disabled&quot;, true);\r\n $Button.text(&quot;&amp;bull; &amp;bull; &amp;bull;&quot;);\r\n $.each($(Form).find(&quot;input[type=&#039;email&#039;]&quot;), function() {\r\n  $(this).removeClass(&quot;Red&quot;);\r\n  if(!OH.GetEmailValidation($(this).val())) {\r\n   $(this).addClass(&quot;Red&quot;);\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;The email address format is invalid.&quot;\r\n   });\r\n  }\r\n });\r\n $.each($(Form).find(&quot;.req&quot;), function() {\r\n  $(this).removeClass(&quot;Red&quot;);\r\n  if($(this).val() === &quot;&quot;) {\r\n   $(this).addClass(&quot;Red&quot;);\r\n   Pass = 0;\r\n  } else {\r\n   Pass = 1;\r\n  }\r\n });\r\n if(RequiredInputs === 0) {\r\n  Pass = 1;\r\n }\r\n if(Pass === 0) {\r\n  $Button.text(Text);\r\n  $Button.prop(&quot;disabled&quot;, false);\r\n  return;\r\n } else {\r\n  $.ajax({\r\n   data: FormData,\r\n   error: (error) =&gt; {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n     &quot;Scrollable&quot;: JSON.stringify(error)\r\n    });\r\n   },\r\n   headers: {\r\n    Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n    Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n   },\r\n   method: &quot;POST&quot;,\r\n   success: (data) =&gt; {\r\n    if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n     OH.Crash(data);\r\n    } else {\r\n     let Class,\r\n          Data = OH.RenderView(data),\r\n          AccessCode = Data.AccessCode,\r\n          Success = Data.Success,\r\n          Type = Data.ResponseType;\r\n     if(!Data.Card &amp;&amp; !Data.Dialog &amp;&amp; typeof Data.View === &quot;undefined&quot;) {\r\n      OH.Dialog({\r\n       &quot;Body&quot;: &quot;&lt;em&gt;[App.Name]&lt;\/em&gt; returned an empty response. Check the following view: &quot; + Processor + &quot;.&quot;\r\n      });\r\n     } else if(AccessCode === &quot;Accepted&quot;) {\r\n      $.each($(Form).find(&quot;.EmptyOnSuccess&quot;), function() {\r\n       $(this).val(&quot;&quot;);\r\n      });\r\n      $.each($(Form).find(&quot;.RestoreDefaultValue&quot;), function() {\r\n       $(this).val($(this).attr(&quot;data-default&quot;));\r\n      });\r\n      if(Success === &quot;CloseCard&quot;) {\r\n       OH.CloseCard();\r\n      } else if(Success === &quot;CloseDialog&quot;) {\r\n       OH.CloseDialog();\r\n      } if(Text === &quot;Post&quot;) {\r\n       $Button.text(&quot;Update&quot;);\r\n      }\r\n      setTimeout(() =&gt; {\r\n       if(Type === &quot;Destruct&quot;) {\r\n        $(Target).toggle(500);\r\n        setTimeout(() =&gt; {\r\n         $(Target).remove();\r\n        }, 600);\r\n       } else if(Type === &quot;GoToView&quot;) {\r\n        const ViewPairID = Form.replace(&quot;.ParentPage&quot;, &quot;&quot;),\r\n                  Parent = $(&quot;.ParentPage&quot; + ViewPairID).parent();\r\n        $(Parent).append(&quot;&lt;div class=&#039;ViewPage&quot; + ViewPairID + &quot; h scr&#039;&gt;&lt;\/div&gt;&quot;);\r\n        $(Parent).find(&quot;.ParentPage&quot; + ViewPairID).fadeOut(500);\r\n        setTimeout(() =&gt; {\r\n         if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n          Data.View.then(response =&gt; {\r\n           $(Parent).find(&quot;.ViewPage&quot; + ViewPairID).html(response).show(&quot;slide&quot;, {\r\n            direction: &quot;right&quot;\r\n           }, 500);\r\n           $(Parent).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n          }).catch(error =&gt; {\r\n           OH.Dialog({\r\n            &quot;Body&quot;: &quot;SendData: Error rendering view data. Please see below for more information:&quot;,\r\n            &quot;Scrollable&quot;: error.message\r\n           });\r\n          });\r\n         }\r\n        }, 600);\r\n       } else if(Type === &quot;ReplaceContent&quot;) {\r\n        if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n         Data.View.then(response =&gt; {\r\n          $(Target).html(response);\r\n          $(Target).find(&quot;input[type=text], textarea&quot;).filter(&quot;:enabled:visible:first&quot;).focus();\r\n         }).catch(error =&gt; {\r\n          OH.Dialog({\r\n           &quot;Body&quot;: &quot;SendData: Error rendering view data. Please see below for more information:&quot;,\r\n           &quot;Scrollable&quot;: error.message\r\n          });\r\n         });\r\n        }\r\n       } else if(Type === &quot;UpdateButton&quot;) {\r\n        OH.UpdateButton($Button, Data.View);\r\n       } else if(Type === &quot;UpdateText&quot;) {\r\n        $Button.text(Data.View);\r\n       }\r\n      }, 750);\r\n      OH.ExecuteCommands(Data.Commands);\r\n     }\r\n     if(Type !== &quot;UpdateButton&quot;) {\r\n      $Button.text(Text);\r\n     }\r\n     $Button.prop(&quot;disabled&quot;, false);\r\n    }\r\n   },\r\n   url: OH.base + Processor\r\n  });\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.SignOut&quot;, (event) =&gt; {\r\n $(event.currentTarget).text(&quot;Signing out...&quot;);\r\n OH.SignOut();\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.ToggleElement&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Delete = $Button.attr(&quot;data-delete&quot;) || &quot;off&quot;,\r\n           Elements = $Button.attr(&quot;data-elements&quot;).split(&quot;;&quot;) || {};\r\n let Time = 500;\r\n Toggle = $Button.attr(&quot;data-toggle&quot;) || &quot;on&quot;;\r\n $.each(Elements, (Key, Element) =&gt; {\r\n  Time += 500;\r\n  setTimeout(() =&gt; {\r\n   if(Toggle === &quot;on&quot;) {\r\n    $(Element).slideDown(500);\r\n   } else if(Toggle === &quot;switch&quot;) {\r\n    $(Element).toggle(&quot;slide&quot;, {\r\n     direction: &quot;up&quot;\r\n    }, 500);\r\n   } else {\r\n    $(Element).slideUp(500);\r\n   }\r\n  }, Time);\r\n });\r\n if(Delete === &quot;on&quot; &amp;&amp; Toggle !== &quot;switch&quot;) {\r\n  $Button.slideUp(500);\r\n  setTimeout(() =&gt; {\r\n   $Button.remove();\r\n  }, 600);\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.ToggleMenu&quot;, (event) =&gt; {\r\n const Content = OH.DefaultContainer,\r\n           Menu = &quot;.TopBar .MenuContainer&quot;;\r\n if($(&quot;.FST&quot;).is(&quot;:visible&quot;)) {\r\n  OH.CloseFirSTEPTool();\r\n } else {\r\n  if($(&quot;.NetMap&quot;).is(&quot;:visible&quot;)) {\r\n   OH.CloseNetMap();\r\n  } else {\r\n   if($(Menu).is(&quot;:visible&quot;)) {\r\n    $(Menu).slideUp(500);\r\n   } else {\r\n    $(Menu).slideDown(500);\r\n   }\r\n  }\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.ToggleNetMap&quot;, (event) =&gt; {\r\n let $Button = $(event.currentTarget);\r\n if($(&quot;.FST&quot;).is(&quot;:visible&quot;)) {\r\n  OH.CloseFirSTEPTool();\r\n } else {\r\n  if($(&quot;.NetMap&quot;).is(&quot;:visible&quot;)) {\r\n   OH.CloseNetMap();\r\n  } else {\r\n   OH.OpenNetMap($Button.attr(&quot;data-map&quot;), &quot;AES&quot;);\r\n  }\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.ToggleSideBar&quot;, (event) =&gt; {\r\n if($(&quot;.FST&quot;).is(&quot;:visible&quot;)) {\r\n  OH.CloseFirSTEPTool();\r\n } else {\r\n  if($(&quot;.NetMap&quot;).is(&quot;:visible&quot;)) {\r\n   OH.CloseNetMap();\r\n  } else {\r\n   $(&quot;.SideBar&quot;).toggle(&quot;slide&quot;, {\r\n    direction: &quot;left&quot;\r\n   }, 500);\r\n  }\r\n }\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.UpdateButton&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           View = $Button.attr(&quot;data-processor&quot;) || &quot;&quot;;\r\n if(Encryption === &quot;AES&quot;) {\r\n  View = OH.AESdecrypt(View);\r\n } else {\r\n  View = OH.Base64decrypt(View);\r\n }\r\n $Button.prop(&quot;disabled&quot;, true);\r\n $Button.text(OH.Loading);\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    const Data = OH.RenderView(data);\r\n    if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n     Data.View.then(response =&gt; {\r\n      OH.UpdateButton($Button, response);\r\n      $Button.prop(&quot;disabled&quot;, false);\r\n      OH.ExecuteCommands(Data.Commands);\r\n     }).catch(error =&gt; {\r\n      OH.Dialog({\r\n       &quot;Body&quot;: &quot;UpdateButton: Error rendering view data. Please see below:&quot;,\r\n       &quot;Scrollable&quot;: error.message\r\n      });\r\n     });\r\n    }\r\n   }\r\n  },\r\n  url: OH.base + View\r\n });\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.UpdateContent&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget),\r\n           Container = $Button.attr(&quot;data-container&quot;) || OH.DefaultContainer,\r\n           Encryption = $Button.attr(&quot;data-encryption&quot;) || &quot;&quot;,\r\n           View = $Button.attr(&quot;data-view&quot;) || &quot;&quot;;\r\n $Button.prop(&quot;disabled&quot;, true);\r\n setTimeout(() =&gt; {\r\n  OH.UpdateContent(Container, View, Encryption);\r\n }, 500);\r\n});\r\n$(document).on(&quot;click&quot;, &quot;.UploadFiles&quot;, (event) =&gt; {\r\n const $Button = $(event.currentTarget);\r\n event.preventDefault();\r\n $Button.prop(&quot;disabled&quot;, true);\r\n $Button.text(OH.Loading);\r\n OH.Upload($Button);\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.CheckIfNumeric&quot;, (event) =&gt; {\r\n let $Input = $(event.currentTarget),\r\n      AllowsSymbols = $Input.attr(&quot;data-symbols&quot;) || 0,\r\n      Pass = 0,\r\n      Value = $Input.val();\r\n if(AllowsSymbols === &quot;Y&quot;) {\r\n  if(Value !== &quot;&quot; &amp;&amp; typeof Value !== &quot;undefined&quot;) {\r\n   Pass = Value.match(\/^([1-9]\\d{0,1}(\\,\\d{3})*|([1-9]\\d*))(\\.\\d{2})?$\/);\r\n   if(Pass === null) {\r\n    OH.Dialog({\r\n     &quot;Body&quot;: &quot;Enter price only. For example: 523.36 or 1,776.00.&quot;\r\n    });\r\n    Value = &quot;&quot;;\r\n   }\r\n  }\r\n } else {\r\n  Value = Value.replace(\/\\D\/g, &quot;&quot;);\r\n }\r\n $Input.val(Value);\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.DiscountCodes&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget),\r\n           Form = $Input.closest(&quot;.DiscountCodesCC&quot;);\r\n let Data = OH.Base64decrypt($Input.attr(&quot;data-u&quot;));\r\n Data = Data.replace(&quot;[DC]&quot;, OH.Base64encrypt($Input.val()));\r\n Data = Data.replace(&quot;[ID]&quot;, OH.Base64encrypt($Input.attr(&quot;data-id&quot;)));\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    var data = OH.Base64decrypt(data);\r\n    if(data[0] === &quot;Accepted&quot;) {\r\n     $(Form).html(data[1]);\r\n    } else {\r\n     $(Form).find(&quot;p.c:last&quot;).html(data[1]);\r\n    }\r\n   }\r\n  },\r\n  url: OH.base + Data\r\n });\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.LinkData&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget),\r\n           Link = OH.Base64encrypt($Input.val()),\r\n           Preview = OH.AESdecrypt($Input.attr(&quot;data-preview&quot;));\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    const Data = OH.RenderView(data);\r\n    if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n     Data.View.then(response =&gt; {\r\n      $(&quot;.AddLink &gt; .LinkPreview&quot;).html(response);\r\n      OH.ExecuteCommands(Data.Commands);\r\n     }).catch(error =&gt; {\r\n      OH.Dialog({\r\n       &quot;Body&quot;: &quot;LinkData: Error rendering view data. Please see below:&quot;,\r\n       &quot;Scrollable&quot;: error.message\r\n      });\r\n     });\r\n    }\r\n   }\r\n  },\r\n  url: OH.base + Preview + &quot;&amp;Link=&quot; + Link\r\n });\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.ReSearch&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget);\r\n OH.ReSearch($Input);\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.SearchBar&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget);\r\n $(&quot;.SideBar&quot;).hide(&quot;slide&quot;, {direction: &quot;left&quot;}, 500);\r\n OH.CloseFirSTEPTool();\r\n OH.CloseNetMap();\r\n OH.UpdateContent(OH.DefaultContainer, OH.AESencrypt(OH.AESdecrypt($Input.attr(&quot;data-u&quot;))) + OH.AESencrypt($Input.val()), &quot;AES&quot;);\r\n});\r\n$(document).on(&quot;keyup&quot;, &quot;.UnlockProtectedContent&quot;, (event) =&gt; {\r\n const $Input = $(event.currentTarget),\r\n           Key = OH.Base64encrypt($Input.val()),\r\n           Parent = $Input.closest(&quot;.ProtectedContent&quot;),\r\n           SignOut = $Input.attr(&quot;data-signout&quot;) || &quot;&quot;;\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;UnlockProtectedContent: Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  headers: {\r\n   Language: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;Language&quot;)),\r\n   Token: OH.AESencrypt(OH.LocalData(&quot;Get&quot;, &quot;SecurityKey&quot;))\r\n  },\r\n  method: &quot;POST&quot;,\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    const Data = OH.RenderView(data);\r\n    if(Data.View !== &quot;&quot; &amp;&amp; typeof Data.View !== &quot;undefined&quot;) {\r\n     Data.View.then(response =&gt; {\r\n      $Input.prop(&quot;disabled&quot;, true);\r\n      setTimeout(() =&gt; {\r\n       if(SignOut === &quot;Yes&quot;) {\r\n        OH.InstantSignOut();\r\n       }\r\n       $(Parent).empty();\r\n       if(Data.AddTopMargin === 1) {\r\n        $(Parent).append(&quot;&lt;div class=&#039;TopBarMargin&#039;&gt;&lt;\/div&gt;\\r\\n&quot;);\r\n       }\r\n       $(Parent).append(response);\r\n       OH.ExecuteCommands(Data.Commands);\r\n      }, 600);\r\n     }).catch(error =&gt; {\r\n      OH.Dialog({\r\n       &quot;Body&quot;: &quot;UnlockProtectedContent: Error rendering view data. Please see below for more information:&quot;,\r\n       &quot;Scrollable&quot;: error.message\r\n      });\r\n     });\r\n    }\r\n   }\r\n  },\r\n  url: OH.base + OH.Base64decrypt($Input.attr(&quot;data-view&quot;)) + &quot;&amp;Key=&quot; + Key\r\n });\r\n});\r\n$(() =&gt; {\r\n $.ajax({\r\n  error: (error) =&gt; {\r\n   OH.Dialog({\r\n    &quot;Body&quot;: &quot;Data retrieval error, please see below.&quot;,\r\n    &quot;Scrollable&quot;: JSON.stringify(error)\r\n   });\r\n  },\r\n  success: (data) =&gt; {\r\n   if(\/&lt;\\\/?[a-z][\\s\\S]*&gt;\/i.test(data) === true) {\r\n    OH.Crash(data);\r\n   } else {\r\n    var data = JSON.parse(OH.AESdecrypt(data));\r\n    OH.SaveToDatabase(&quot;Extensions&quot;, data.JSON).then(() =&gt; {\r\n     OH.UpdateContent(&quot;.RegSel&quot;, &quot;[App.SwitchLanguages]&quot;, &quot;AES&quot;);\r\n     if($(location).attr(&quot;href&quot;) === &quot;[App.Base]\/&quot;) {\r\n      setTimeout(() =&gt; {\r\n       OH.AddContent();\r\n       OH.SetUIVariant(OH.DefaultUI);\r\n       $(&quot;.Boot&quot;).fadeOut(500);\r\n      }, 1000);\r\n     } else {\r\n      $(&quot;.Boot&quot;).fadeOut(500);\r\n     }\r\n    }).catch(error =&gt; {\r\n     OH.Dialog({\r\n      &quot;Body&quot;: &quot;Unable to complete the boot process. See below for more information:&quot;,\r\n      &quot;Scrollable&quot;: error.message\r\n     });\r\n    });\r\n   }\r\n  },\r\n  url: &quot;[App.Base]\/extensions&quot;\r\n });\r\n setInterval(() =&gt; {\r\n  OH.Language = OH.LocalData(&quot;Get&quot;, &quot;Language&quot;);\r\n  if(OH.Language === &quot;&quot; || typeof OH.Language === &quot;undefined&quot;) {\r\n   $(&quot;.RegSel&quot;).fadeIn(500);\r\n  }\r\n }, 15);\r\n $(window).scroll(() =&gt; {\r\n  const Offset = $(&quot;.ToggleElementOnScroll&quot;).offset().top,\r\n   Top = $(window).scrollTop();\r\n  if(Top &lt; Offset) {\r\n   $(&quot;.ToggleElementOnScroll&quot;).slideUp(500);\r\n  } else {\r\n   $(&quot;.ToggleElementOnScroll&quot;).slideDown(500);\r\n  }\r\n });\r\n});","Category":"Extension","Chats":[],"Created":"2024-08-01 04:50:25PM","Description":"The core functionality for the client, with both defined and anonymous functions and objects.","Forums":[],"ForumPosts":[],"Members":[],"Modified":"2025-05-23 04:41:59PM","ModifiedBy":{"2024-12-09 04:36:49PM":"Mike","2025-02-05 12:31:09AM":"Mike","2025-02-05 12:35:52AM":"Mike","2025-02-05 12:36:46AM":"Mike","2025-02-05 12:42:50AM":"Mike","2025-02-05 01:06:09AM":"Mike","2025-02-05 01:52:25AM":"Mike","2025-02-05 01:58:40AM":"Mike","2025-02-05 02:34:42AM":"Mike","2025-02-05 02:37:29AM":"Mike","2025-02-05 02:40:28AM":"Mike","2025-02-05 02:42:46AM":"Mike","2025-02-09 05:16:11AM":"Mike","2025-02-09 05:17:57AM":"Mike","2025-02-09 05:48:42AM":"Mike","2025-02-09 05:55:42AM":"Mike","2025-02-09 05:59:34AM":"Mike","2025-02-09 06:01:23AM":"Mike","2025-02-11 07:39:03PM":"Mike","2025-02-11 07:50:00PM":"Mike","2025-02-11 07:50:38PM":"Mike","2025-02-11 07:54:15PM":"Mike","2025-02-11 07:55:19PM":"Mike","2025-02-22 08:15:13PM":"Mike","2025-02-22 09:08:50PM":"Mike","2025-02-22 09:41:11PM":"Mike","2025-02-22 09:44:35PM":"Mike","2025-02-22 09:54:25PM":"Mike","2025-02-22 10:08:34PM":"Mike","2025-02-22 10:09:44PM":"Mike","2025-02-22 11:00:43PM":"Mike","2025-02-22 11:08:26PM":"Mike","2025-02-22 11:09:44PM":"Mike","2025-02-22 11:14:23PM":"Mike","2025-02-22 11:26:38PM":"Mike","2025-02-22 11:33:03PM":"Mike","2025-02-22 11:35:17PM":"Mike","2025-02-22 11:44:37PM":"Mike","2025-02-22 11:46:45PM":"Mike","2025-02-22 11:49:58PM":"Mike","2025-02-22 11:52:49PM":"Mike","2025-02-23 01:58:45AM":"Mike","2025-02-23 02:01:27AM":"Mike","2025-02-23 02:04:07AM":"Mike","2025-02-23 02:06:14AM":"Mike","2025-02-23 02:07:43AM":"Mike","2025-02-23 02:13:19AM":"Mike","2025-02-23 02:15:45AM":"Mike","2025-02-23 02:18:34AM":"Mike","2025-02-23 02:21:17AM":"Mike","2025-02-23 02:25:30AM":"Mike","2025-02-23 02:29:04AM":"Mike","2025-02-23 02:35:09AM":"Mike","2025-02-23 02:45:00AM":"Mike","2025-02-23 02:55:38AM":"Mike","2025-02-23 02:58:29AM":"Mike","2025-02-23 03:01:01AM":"Mike","2025-02-23 03:19:11AM":"Mike","2025-03-01 11:30:11PM":"Mike","2025-03-01 11:31:19PM":"Mike","2025-03-01 11:34:36PM":"Mike","2025-03-01 11:35:13PM":"Mike","2025-03-01 11:36:42PM":"Mike","2025-03-01 11:39:26PM":"Mike","2025-03-01 11:39:49PM":"Mike","2025-03-01 11:40:56PM":"Mike","2025-03-01 11:41:24PM":"Mike","2025-03-01 11:42:49PM":"Mike","2025-03-01 11:46:25PM":"Mike","2025-03-01 11:59:11PM":"Mike","2025-03-02 12:01:42AM":"Mike","2025-03-02 12:02:52AM":"Mike","2025-03-02 12:03:37AM":"Mike","2025-03-02 12:06:50AM":"Mike","2025-03-02 12:17:28AM":"Mike","2025-03-02 12:19:32AM":"Mike","2025-03-02 12:22:45AM":"Mike","2025-03-02 12:31:23AM":"Mike","2025-03-02 12:50:00AM":"Mike","2025-03-02 12:51:30AM":"Mike","2025-03-02 12:52:48AM":"Mike","2025-03-02 01:00:56AM":"Mike","2025-03-02 01:02:17AM":"Mike","2025-03-02 01:03:01AM":"Mike","2025-03-02 01:08:56AM":"Mike","2025-03-02 01:13:10AM":"Mike","2025-03-02 01:17:44AM":"Mike","2025-03-02 01:22:23AM":"Mike","2025-03-02 01:24:12AM":"Mike","2025-03-02 01:26:34AM":"Mike","2025-03-02 01:28:06AM":"Mike","2025-03-02 01:33:44AM":"Mike","2025-03-02 01:36:30AM":"Mike","2025-03-02 01:37:10AM":"Mike","2025-03-02 01:49:06AM":"Mike","2025-03-02 01:50:30AM":"Mike","2025-03-02 01:50:56AM":"Mike","2025-03-02 01:52:08AM":"Mike","2025-03-02 01:53:55AM":"Mike","2025-03-02 01:57:15AM":"Mike","2025-03-02 01:58:10AM":"Mike","2025-03-02 02:00:01AM":"Mike","2025-03-02 02:07:25AM":"Mike","2025-03-02 02:12:56AM":"Mike","2025-03-02 02:14:20AM":"Mike","2025-03-02 02:17:21AM":"Mike","2025-03-02 02:35:48AM":"Mike","2025-03-02 02:47:27AM":"Mike","2025-03-02 02:49:15AM":"Mike","2025-03-02 02:51:56AM":"Mike","2025-03-02 02:53:09AM":"Mike","2025-03-02 02:54:02AM":"Mike","2025-03-02 02:58:21AM":"Mike","2025-03-02 03:50:58PM":"Mike","2025-03-02 03:56:24PM":"Mike","2025-03-02 04:06:51PM":"Mike","2025-03-02 04:09:39PM":"Mike","2025-03-02 04:33:52PM":"Mike","2025-03-02 05:12:22PM":"Mike","2025-03-02 05:21:09PM":"Mike","2025-03-02 05:24:41PM":"Mike","2025-03-02 05:27:33PM":"Mike","2025-03-02 05:52:22PM":"Mike","2025-03-02 05:56:51PM":"Mike","2025-03-07 04:18:30PM":"Mike","2025-03-07 04:24:23PM":"Mike","2025-03-07 04:26:54PM":"Mike","2025-03-07 04:43:30PM":"Mike","2025-03-07 04:45:38PM":"Mike","2025-03-09 12:07:45AM":"Mike","2025-03-09 12:09:15AM":"Mike","2025-03-09 12:52:45AM":"Mike","2025-03-09 12:53:54AM":"Mike","2025-03-09 01:03:31AM":"Mike","2025-03-09 01:08:31AM":"Mike","2025-03-09 01:12:31AM":"Mike","2025-03-09 01:13:17AM":"Mike","2025-03-09 01:13:39AM":"Mike","2025-03-09 01:14:39AM":"Mike","2025-03-09 01:15:47AM":"Mike","2025-03-09 01:16:32AM":"Mike","2025-03-09 01:16:59AM":"Mike","2025-03-09 01:22:42AM":"Mike","2025-03-09 01:24:27AM":"Mike","2025-03-09 01:25:55AM":"Mike","2025-03-09 01:26:47AM":"Mike","2025-03-09 01:27:29AM":"Mike","2025-03-09 01:28:36AM":"Mike","2025-03-09 01:29:03AM":"Mike","2025-03-09 01:31:52AM":"Mike","2025-03-09 03:55:54AM":"Mike","2025-03-09 03:56:27AM":"Mike","2025-03-09 04:11:56AM":"Mike","2025-03-09 04:15:45AM":"Mike","2025-03-09 04:24:53AM":"Mike","2025-03-09 04:26:47AM":"Mike","2025-03-09 04:27:42AM":"Mike","2025-03-09 04:30:09AM":"Mike","2025-03-09 04:33:06AM":"Mike","2025-03-09 04:34:50AM":"Mike","2025-03-09 04:36:58AM":"Mike","2025-03-09 04:38:04AM":"Mike","2025-03-09 04:38:49AM":"Mike","2025-03-09 04:39:18AM":"Mike","2025-03-09 04:40:13AM":"Mike","2025-03-09 04:41:55AM":"Mike","2025-03-09 04:42:43AM":"Mike","2025-03-09 04:44:34AM":"Mike","2025-03-09 04:45:22AM":"Mike","2025-03-09 04:45:46AM":"Mike","2025-03-09 04:49:01AM":"Mike","2025-03-09 04:49:35AM":"Mike","2025-03-09 04:52:34AM":"Mike","2025-03-09 04:53:03AM":"Mike","2025-03-09 04:53:42AM":"Mike","2025-03-09 04:55:33AM":"Mike","2025-03-09 05:07:09AM":"Mike","2025-03-09 05:09:20AM":"Mike","2025-03-09 05:10:37AM":"Mike","2025-03-09 05:11:14AM":"Mike","2025-03-09 05:11:55AM":"Mike","2025-03-09 05:14:15AM":"Mike","2025-03-09 05:14:57AM":"Mike","2025-03-09 05:15:48AM":"Mike","2025-03-09 05:18:58AM":"Mike","2025-03-09 05:19:45AM":"Mike","2025-03-09 05:21:17AM":"Mike","2025-03-09 05:23:58AM":"Mike","2025-03-09 05:24:49AM":"Mike","2025-03-09 05:28:11AM":"Mike","2025-03-09 05:30:04AM":"Mike","2025-03-09 05:36:34AM":"Mike","2025-03-09 05:37:29AM":"Mike","2025-03-12 12:49:36AM":"Mike","2025-03-12 01:01:32AM":"Mike","2025-03-12 01:26:16AM":"Mike","2025-03-12 01:37:36AM":"Mike","2025-03-12 01:47:09AM":"Mike","2025-03-12 01:57:17AM":"Mike","2025-03-12 02:00:56AM":"Mike","2025-03-12 02:05:52AM":"Mike","2025-03-12 02:09:59AM":"Mike","2025-03-12 02:18:49AM":"Mike","2025-03-12 02:22:36AM":"Mike","2025-03-12 02:40:55AM":"Mike","2025-03-12 02:42:01AM":"Mike","2025-03-12 02:43:27AM":"Mike","2025-03-12 02:44:38AM":"Mike","2025-03-12 04:37:21AM":"Mike","2025-03-23 06:00:37AM":"Mike","2025-04-12 12:55:18AM":"Mike","2025-04-12 01:24:54AM":"Mike","2025-04-12 01:25:38AM":"Mike","2025-04-12 01:26:58AM":"Mike","2025-04-12 01:29:49AM":"Mike","2025-04-12 01:36:03AM":"Mike","2025-04-12 02:22:58AM":"Mike","2025-04-12 02:24:19AM":"Mike","2025-04-12 02:25:56AM":"Mike","2025-04-12 02:35:30AM":"Mike","2025-04-12 02:59:53AM":"Mike","2025-04-12 03:03:59AM":"Mike","2025-04-13 01:13:40PM":"Mike","2025-04-13 01:15:57PM":"Mike","2025-04-13 03:02:20PM":"Mike","2025-04-13 03:03:38PM":"Mike","2025-04-13 03:06:10PM":"Mike","2025-04-14 09:16:14AM":"Mike","2025-04-14 09:32:20AM":"Mike","2025-04-15 08:50:33AM":"Mike","2025-04-15 08:56:14AM":"Mike","2025-04-15 10:29:30AM":"Mike","2025-04-16 08:57:03PM":"Mike","2025-04-16 09:04:48PM":"Mike","2025-04-17 12:04:15AM":"Mike","2025-04-17 12:40:55AM":"Mike","2025-04-17 12:46:31AM":"Mike","2025-04-17 12:47:51AM":"Mike","2025-04-17 12:48:47AM":"Mike","2025-04-17 01:10:52PM":"Mike","2025-04-17 01:27:10PM":"Mike","2025-04-17 01:52:01PM":"Mike","2025-04-17 01:53:45PM":"Mike","2025-04-17 01:54:35PM":"Mike","2025-04-17 01:56:10PM":"Mike","2025-04-17 01:58:11PM":"Mike","2025-04-17 02:00:21PM":"Mike","2025-04-17 02:01:41PM":"Mike","2025-04-17 02:03:19PM":"Mike","2025-04-17 02:05:06PM":"Mike","2025-04-17 02:07:35PM":"Mike","2025-04-17 02:09:12PM":"Mike","2025-04-17 02:12:19PM":"Mike","2025-04-17 02:14:07PM":"Mike","2025-04-17 02:15:08PM":"Mike","2025-04-17 02:15:58PM":"Mike","2025-04-17 02:17:12PM":"Mike","2025-04-17 02:18:01PM":"Mike","2025-04-17 02:18:47PM":"Mike","2025-04-17 02:20:54PM":"Mike","2025-04-17 02:22:00PM":"Mike","2025-04-17 02:22:57PM":"Mike","2025-04-17 02:24:09PM":"Mike","2025-04-17 02:24:36PM":"Mike","2025-04-17 02:27:19PM":"Mike","2025-04-17 02:28:09PM":"Mike","2025-04-17 02:29:39PM":"Mike","2025-04-17 02:30:42PM":"Mike","2025-04-17 02:33:08PM":"Mike","2025-04-17 02:37:11PM":"Mike","2025-04-17 02:48:45PM":"Mike","2025-04-17 02:49:48PM":"Mike","2025-04-17 02:50:34PM":"Mike","2025-04-17 02:52:10PM":"Mike","2025-04-17 02:53:10PM":"Mike","2025-04-17 02:54:02PM":"Mike","2025-04-22 02:34:42AM":"Mike","2025-04-22 02:41:03AM":"Mike","2025-04-22 02:45:43AM":"Mike","2025-04-22 02:48:14AM":"Mike","2025-04-22 02:58:16AM":"Mike","2025-04-22 03:08:53AM":"Mike","2025-04-22 03:12:37AM":"Mike","2025-04-22 03:20:43AM":"Mike","2025-04-22 03:26:26AM":"Mike","2025-04-22 03:27:00AM":"Mike","2025-04-22 03:27:51AM":"Mike","2025-04-22 03:32:15AM":"Mike","2025-04-22 03:35:48AM":"Mike","2025-04-22 03:52:29AM":"Mike","2025-04-22 04:00:18AM":"Mike","2025-04-22 04:01:10AM":"Mike","2025-04-22 04:04:03AM":"Mike","2025-04-24 03:21:08AM":"Mike","2025-04-24 03:23:01AM":"Mike","2025-04-24 03:37:23AM":"Mike","2025-04-24 03:38:13AM":"Mike","2025-04-24 03:39:20AM":"Mike","2025-04-24 03:40:32AM":"Mike","2025-04-24 03:42:28AM":"Mike","2025-04-24 03:43:34AM":"Mike","2025-04-24 03:43:56AM":"Mike","2025-04-27 01:08:48PM":"Mike","2025-04-27 03:02:32PM":"Mike","2025-04-27 03:06:50PM":"Mike","2025-04-27 03:10:25PM":"Mike","2025-04-27 03:15:00PM":"Mike","2025-04-27 03:16:13PM":"Mike","2025-04-27 03:17:23PM":"Mike","2025-04-30 07:34:31PM":"Mike","2025-04-30 07:36:16PM":"Mike","2025-04-30 07:43:51PM":"Mike","2025-04-30 11:16:41PM":"Mike","2025-05-04 01:58:00AM":"Mike","2025-05-04 01:59:50AM":"Mike","2025-05-04 03:21:42AM":"Mike","2025-05-04 03:21:56AM":"Mike","2025-05-04 11:26:33AM":"Mike","2025-05-04 12:14:33PM":"Mike","2025-05-05 02:00:12AM":"Mike","2025-05-05 02:01:24AM":"Mike","2025-05-05 02:04:11AM":"Mike","2025-05-05 02:05:01AM":"Mike","2025-05-05 02:11:09AM":"Mike","2025-05-05 02:12:37AM":"Mike","2025-05-05 02:14:18AM":"Mike","2025-05-05 02:18:17AM":"Mike","2025-05-05 02:19:56AM":"Mike","2025-05-05 02:20:26AM":"Mike","2025-05-05 02:21:19AM":"Mike","2025-05-05 02:21:59AM":"Mike","2025-05-05 02:24:26AM":"Mike","2025-05-05 02:29:33AM":"Mike","2025-05-05 02:31:09AM":"Mike","2025-05-05 02:33:43AM":"Mike","2025-05-05 02:37:48AM":"Mike","2025-05-05 02:40:23AM":"Mike","2025-05-05 02:47:39AM":"Mike","2025-05-05 02:48:41AM":"Mike","2025-05-05 02:50:14AM":"Mike","2025-05-05 02:50:55AM":"Mike","2025-05-05 02:52:10AM":"Mike","2025-05-05 02:58:14AM":"Mike","2025-05-05 03:06:11AM":"Mike","2025-05-05 03:07:35AM":"Mike","2025-05-05 03:09:42AM":"Mike","2025-05-05 03:10:35AM":"Mike","2025-05-05 03:10:44AM":"Mike","2025-05-05 03:11:07AM":"Mike","2025-05-05 03:11:45AM":"Mike","2025-05-05 03:12:09AM":"Mike","2025-05-05 03:12:52AM":"Mike","2025-05-05 03:13:24AM":"Mike","2025-05-05 03:14:41AM":"Mike","2025-05-05 03:16:15AM":"Mike","2025-05-05 03:17:58AM":"Mike","2025-05-05 03:19:10AM":"Mike","2025-05-05 03:22:27AM":"Mike","2025-05-05 03:23:09AM":"Mike","2025-05-05 03:29:56AM":"Mike","2025-05-05 03:33:51AM":"Mike","2025-05-05 03:37:32AM":"Mike","2025-05-05 03:44:52AM":"Mike","2025-05-05 03:45:36AM":"Mike","2025-05-05 03:46:31AM":"Mike","2025-05-05 03:48:31AM":"Mike","2025-05-05 03:51:38AM":"Mike","2025-05-05 04:08:46AM":"Mike","2025-05-08 11:30:12PM":"Mike","2025-05-09 12:29:51AM":"Mike","2025-05-09 01:29:12AM":"Mike","2025-05-09 03:43:53AM":"Mike","2025-05-09 03:45:13AM":"Mike","2025-05-09 03:45:49AM":"Mike","2025-05-09 04:10:25AM":"Mike","2025-05-09 04:23:31AM":"Mike","2025-05-10 06:51:08PM":"Mike","2025-05-10 07:26:17PM":"Mike","2025-05-10 07:37:03PM":"Mike","2025-05-11 01:36:28AM":"Mike","2025-05-11 01:38:17AM":"Mike","2025-05-11 02:15:14AM":"Mike","2025-05-11 02:16:24AM":"Mike","2025-05-11 02:41:01AM":"Mike","2025-05-11 03:24:10AM":"Mike","2025-05-11 04:33:39AM":"Mike","2025-05-11 04:40:36AM":"Mike","2025-05-11 04:43:34AM":"Mike","2025-05-11 04:45:02AM":"Mike","2025-05-11 04:47:16AM":"Mike","2025-05-11 04:47:57AM":"Mike","2025-05-11 05:08:15AM":"Mike","2025-05-11 05:10:08AM":"Mike","2025-05-11 05:12:52AM":"Mike","2025-05-11 05:21:05AM":"Mike","2025-05-11 05:23:47AM":"Mike","2025-05-11 05:24:44AM":"Mike","2025-05-11 05:52:38AM":"Mike","2025-05-12 05:55:57PM":"Mike","2025-05-12 06:23:55PM":"Mike","2025-05-12 06:33:04PM":"Mike","2025-05-12 06:34:00PM":"Mike","2025-05-12 06:43:37PM":"Mike","2025-05-12 06:49:42PM":"Mike","2025-05-12 06:52:44PM":"Mike","2025-05-12 06:54:17PM":"Mike","2025-05-12 07:00:06PM":"Mike","2025-05-12 07:00:42PM":"Mike","2025-05-12 07:01:22PM":"Mike","2025-05-12 07:02:09PM":"Mike","2025-05-12 07:03:52PM":"Mike","2025-05-12 07:15:17PM":"Mike","2025-05-14 11:08:29PM":"Mike","2025-05-15 01:42:14AM":"Mike","2025-05-15 01:43:14AM":"Mike","2025-05-15 01:44:44AM":"Mike","2025-05-15 01:47:32AM":"Mike","2025-05-15 01:48:22AM":"Mike","2025-05-15 01:50:40AM":"Mike","2025-05-15 01:51:21AM":"Mike","2025-05-15 01:51:50AM":"Mike","2025-05-15 01:53:26AM":"Mike","2025-05-15 01:55:53AM":"Mike","2025-05-15 01:56:33AM":"Mike","2025-05-15 01:57:45AM":"Mike","2025-05-15 01:58:16AM":"Mike","2025-05-15 01:58:38AM":"Mike","2025-05-15 02:01:30AM":"Mike","2025-05-15 02:03:43AM":"Mike","2025-05-15 03:08:16AM":"Mike","2025-05-16 01:35:15AM":"Mike","2025-05-16 02:00:30AM":"Mike","2025-05-16 03:00:33AM":"Mike","2025-05-16 03:02:57AM":"Mike","2025-05-16 03:04:23AM":"Mike","2025-05-16 03:06:27AM":"Mike","2025-05-16 03:07:35AM":"Mike","2025-05-16 03:08:32AM":"Mike","2025-05-16 03:10:47AM":"Mike","2025-05-16 03:12:34AM":"Mike","2025-05-16 03:17:26AM":"Mike","2025-05-16 03:52:27AM":"Mike","2025-05-16 03:57:06AM":"Mike","2025-05-16 04:02:52AM":"Mike","2025-05-16 04:06:05AM":"Mike","2025-05-16 10:14:52PM":"Mike","2025-05-16 10:19:21PM":"Mike","2025-05-16 10:21:39PM":"Mike","2025-05-16 11:01:51PM":"Mike","2025-05-18 01:03:18AM":"Mike","2025-05-18 02:39:38AM":"Mike","2025-05-18 02:40:57AM":"Mike","2025-05-18 02:43:01AM":"Mike","2025-05-18 02:43:54AM":"Mike","2025-05-18 02:52:23AM":"Mike","2025-05-18 02:53:57AM":"Mike","2025-05-18 02:55:19AM":"Mike","2025-05-18 02:56:03AM":"Mike","2025-05-18 02:58:11AM":"Mike","2025-05-18 02:58:54AM":"Mike","2025-05-18 03:00:19AM":"Mike","2025-05-18 03:00:41AM":"Mike","2025-05-18 03:01:09AM":"Mike","2025-05-18 03:01:44AM":"Mike","2025-05-18 03:03:09AM":"Mike","2025-05-18 03:03:43AM":"Mike","2025-05-18 03:05:19AM":"Mike","2025-05-18 03:12:21AM":"Mike","2025-05-18 12:32:25PM":"Mike","2025-05-18 01:00:07PM":"Mike","2025-05-18 01:11:26PM":"Mike","2025-05-18 01:13:47PM":"Mike","2025-05-18 01:14:33PM":"Mike","2025-05-18 01:19:54PM":"Mike","2025-05-18 01:23:42PM":"Mike","2025-05-18 01:33:35PM":"Mike","2025-05-18 01:33:46PM":"Mike","2025-05-18 02:13:04PM":"Mike","2025-05-18 02:13:47PM":"Mike","2025-05-18 03:04:39PM":"Mike","2025-05-18 03:05:20PM":"Mike","2025-05-18 03:10:06PM":"Mike","2025-05-18 03:10:38PM":"Mike","2025-05-18 03:11:23PM":"Mike","2025-05-18 03:12:32PM":"Mike","2025-05-18 03:13:47PM":"Mike","2025-05-18 03:22:25PM":"Mike","2025-05-18 03:23:05PM":"Mike","2025-05-18 03:23:53PM":"Mike","2025-05-18 03:25:13PM":"Mike","2025-05-18 03:27:46PM":"Mike","2025-05-18 03:28:24PM":"Mike","2025-05-18 03:30:14PM":"Mike","2025-05-18 03:32:29PM":"Mike","2025-05-20 01:28:57AM":"Mike","2025-05-20 01:30:10AM":"Mike","2025-05-20 01:31:29AM":"Mike","2025-05-20 01:32:20AM":"Mike","2025-05-20 01:35:09AM":"Mike","2025-05-20 01:36:54AM":"Mike","2025-05-20 01:38:02AM":"Mike","2025-05-20 01:41:29AM":"Mike","2025-05-20 02:02:19AM":"Mike","2025-05-20 02:09:49AM":"Mike","2025-05-20 02:10:51AM":"Mike","2025-05-20 02:12:03AM":"Mike","2025-05-20 02:13:53AM":"Mike","2025-05-20 02:15:12AM":"Mike","2025-05-20 02:16:50AM":"Mike","2025-05-20 02:18:44AM":"Mike","2025-05-20 02:21:27AM":"Mike","2025-05-20 02:22:09AM":"Mike","2025-05-20 02:22:30AM":"Mike","2025-05-20 02:52:39AM":"Mike","2025-05-20 07:36:38AM":"Mike","2025-05-20 07:44:20AM":"Mike","2025-05-20 07:50:26AM":"Mike","2025-05-20 07:53:32AM":"Mike","2025-05-20 07:55:48AM":"Mike","2025-05-20 08:01:42AM":"Mike","2025-05-21 09:48:37PM":"Mike","2025-05-21 09:50:12PM":"Mike","2025-05-21 10:07:15PM":"Mike","2025-05-22 12:29:59PM":"Mike","2025-05-22 12:35:22PM":"Mike","2025-05-22 12:36:22PM":"Mike","2025-05-22 12:37:21PM":"Mike","2025-05-22 01:58:29PM":"Mike","2025-05-22 02:04:44PM":"Mike","2025-05-22 02:28:52PM":"Mike","2025-05-22 02:29:49PM":"Mike","2025-05-22 02:30:49PM":"Mike","2025-05-22 02:31:19PM":"Mike","2025-05-22 02:34:16PM":"Mike","2025-05-22 02:38:33PM":"Mike","2025-05-22 02:40:50PM":"Mike","2025-05-22 02:46:30PM":"Mike","2025-05-22 02:48:37PM":"Mike","2025-05-22 02:50:01PM":"Mike","2025-05-22 02:52:47PM":"Mike","2025-05-22 02:58:08PM":"Mike","2025-05-22 02:59:43PM":"Mike","2025-05-22 03:01:31PM":"Mike","2025-05-22 03:05:07PM":"Mike","2025-05-23 12:01:01PM":"Mike","2025-05-23 12:02:10PM":"Mike","2025-05-23 12:04:07PM":"Mike","2025-05-23 12:05:33PM":"Mike","2025-05-23 12:07:27PM":"Mike","2025-05-23 01:06:37PM":"Mike","2025-05-23 02:37:56PM":"Mike","2025-05-23 02:41:29PM":"Mike","2025-05-23 02:42:34PM":"Mike","2025-05-23 02:48:26PM":"Mike","2025-05-23 02:55:26PM":"Mike","2025-05-23 02:57:33PM":"Mike","2025-05-23 03:01:09PM":"Mike","2025-05-23 03:02:40PM":"Mike","2025-05-23 03:06:27PM":"Mike","2025-05-23 03:07:14PM":"Mike","2025-05-23 03:08:30PM":"Mike","2025-05-23 03:11:59PM":"Mike","2025-05-23 03:20:45PM":"Mike","2025-05-23 03:22:55PM":"Mike","2025-05-23 03:26:29PM":"Mike","2025-05-23 03:27:29PM":"Mike","2025-05-23 03:28:24PM":"Mike","2025-05-23 03:30:43PM":"Mike","2025-05-23 03:32:13PM":"Mike","2025-05-23 03:33:32PM":"Mike","2025-05-23 03:34:40PM":"Mike","2025-05-23 03:35:44PM":"Mike","2025-05-23 03:36:24PM":"Mike","2025-05-23 03:37:49PM":"Mike","2025-05-23 03:39:37PM":"Mike","2025-05-23 03:41:23PM":"Mike","2025-05-23 03:43:25PM":"Mike","2025-05-23 03:56:18PM":"Mike","2025-05-23 03:58:09PM":"Mike","2025-05-23 04:32:08PM":"Mike","2025-05-23 04:34:03PM":"Mike","2025-05-23 04:35:15PM":"Mike","2025-05-23 04:41:18PM":"Mike","2025-05-23 04:41:59PM":"Mike"},"Polls":[],"Products":[],"Purge":0,"Shops":[],"Title":"Web UI: Client Logic","UN":"Mike","Updates":[]}